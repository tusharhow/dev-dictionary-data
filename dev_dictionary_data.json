{
  "words": [
  {
    "id": 1,
    "word": "Algorithm",
    "definition": "অ্যালগরিদম হলো এমন একটি সুপরিকল্পিত ধাপগুলোর সমষ্টি, যা নির্দিষ্ট কোনো সমস্যা সমাধানে বা কাজ সম্পাদনে ধাপে ধাপে পরিচালিত হয়। এটি লজিক এবং গাণিতিক উপাদানের সমন্বয়ে তৈরি, যার মাধ্যমে সঠিক ও কার্যকর ফলাফল পাওয়া সম্ভব হয়।",
    "example": "বাবল সোর্ট অ্যালগরিদম ব্যবহার করে একটি তালিকা সহজেই সাজানো যায়।",
    "category": "Computer Science",
    "translation": "অ্যালগরিদম",
    "isFavorite": false
  },
  {
    "id": 2,
    "word": "API",
    "definition": "এপিআই বা অ্যাপ্লিকেশন প্রোগ্রামিং ইন্টারফেস হল একটি সেট নির্দেশনা ও প্রোটোকল, যা বিভিন্ন সফটওয়্যার কম্পোনেন্টকে একে অপরের সাথে যোগাযোগ ও তথ্য আদানপ্রদান করতে সহায়তা করে। এটি ডেভেলপারদের বিভিন্ন ফাংশনালিটি সহজে ইন্টিগ্রেট করার সুযোগ দেয়।",
    "example": "Google Maps API ব্যবহার করে বিভিন্ন অ্যাপ্লিকেশনে মানচিত্র সংযুক্ত করা হয়।",
    "category": "Web Development",
    "translation": "এপিআই",
    "isFavorite": false
  },
  {
    "id": 3,
    "word": "Database",
    "definition": "ডাটাবেজ হচ্ছে একটি সংগঠিত ডেটা সংরক্ষণের পদ্ধতি, যেখানে তথ্যগুলো সুশৃঙ্খলভাবে সংরক্ষিত থাকে যাতে দ্রুত অনুসন্ধান, হালনাগাদ এবং পরিচালনা করা যায়। এটি তথ্য সংরক্ষণের একটি কেন্দ্রীয় স্থল হিসেবে কাজ করে।",
    "example": "MySQL একটি জনপ্রিয় ডাটাবেজ সিস্টেম যা অনেক ওয়েবসাইটে ব্যবহৃত হয়।",
    "category": "Data Management",
    "translation": "ডাটাবেজ",
    "isFavorite": false
  },
  {
    "id": 4,
    "word": "Bug",
    "definition": "বাগ হলো কোডে থাকা অপ্রত্যাশিত ত্রুটি বা সমস্যা, যা প্রোগ্রামের সঠিক কার্যক্রমে বাধা সৃষ্টি করে। এই ত্রুটির কারণে সফটওয়্যার সঠিকভাবে কাজ করে না এবং ব্যবহারকারীর অভিজ্ঞতায় প্রভাব ফেলে।",
    "example": "কোড রিভিউ করার সময় একটি গুরুত্বপূর্ণ বাগ চিহ্নিত হয়েছে।",
    "category": "Software Development",
    "translation": "বাগ",
    "isFavorite": false
  },
  {
    "id": 5,
    "word": "Cache",
    "definition": "ক্যাশ একটি অস্থায়ী ডেটা সংরক্ষণ পদ্ধতি, যা পুনরায় অ্যাক্সেসের জন্য তথ্যকে দ্রুত রাখে। এটি সিস্টেমের পারফরমেন্স উন্নত করতে এবং লোড সময় কমাতে ব্যবহৃত হয়।",
    "example": "ওয়েবসাইটের পেজ লোডিং গতি বাড়াতে ব্রাউজারে ক্যাশ ব্যবহার করা হয়।",
    "category": "Performance Optimization",
    "translation": "ক্যাশ",
    "isFavorite": false
  },
  {
    "id": 6,
    "word": "Compiler",
    "definition": "কম্পাইলার হলো এমন একটি সফটওয়্যার যেটি উচ্চস্তরের প্রোগ্রামিং ভাষায় লেখা কোডকে মেশিন কোডে রূপান্তর করে, যাতে কম্পিউটার তা বুঝতে এবং কার্যকরভাবে চালাতে পারে।",
    "example": "C প্রোগ্রামিং ভাষার জন্য GCC কম্পাইলার ব্যবহৃত হয়।",
    "category": "Programming",
    "translation": "কম্পাইলার",
    "isFavorite": false
  },
  {
    "id": 7,
    "word": "Framework",
    "definition": "ফ্রেমওয়ার্ক একটি কাঠামোগত প্ল্যাটফর্ম যা সফটওয়্যার ডেভেলপমেন্টে পুনর্ব্যবহারযোগ্য কোড, টুলস এবং লাইব্রেরি সরবরাহ করে, যার ফলে অ্যাপ তৈরি করা সহজ ও দ্রুত হয়।",
    "example": "Flutter একটি জনপ্রিয় ফ্রেমওয়ার্ক যা মোবাইল অ্যাপ ডেভেলপমেন্টে ব্যবহৃত হয়।",
    "category": "Software Development",
    "translation": "ফ্রেমওয়ার্ক",
    "isFavorite": false
  },
  {
    "id": 8,
    "word": "Git",
    "definition": "গিট একটি বিতরণকৃত ভার্সন কন্ট্রোল সিস্টেম, যা কোডের পরিবর্তনগুলোর ইতিহাস সংরক্ষণ করে এবং একাধিক ডেভেলপারকে একসাথে কাজ করার সুবিধা প্রদান করে।",
    "example": "GitHub এ কোড হোস্ট করার জন্য Git ব্যবহার করা হয়।",
    "category": "Version Control",
    "translation": "গিট",
    "isFavorite": false
  },
  {
    "id": 9,
    "word": "Library",
    "definition": "লাইব্রেরি হলো কোডের পুনঃব্যবহারযোগ্য অংশের সমষ্টি, যা নির্দিষ্ট কার্য সম্পাদনে সহায়তা করে এবং ডেভেলপারদের দ্রুত এবং দক্ষতার সাথে কাজ করতে সাহায্য করে।",
    "example": "ReactJS একটি জাভাস্ক্রিপ্ট লাইব্রেরি যা ইউজার ইন্টারফেস তৈরি করতে ব্যবহৃত হয়।",
    "category": "Software Development",
    "translation": "লাইব্রেরি",
    "isFavorite": false
  },
  {
    "id": 10,
    "word": "Machine Learning",
    "definition": "মেশিন লার্নিং হলো একটি প্রক্রিয়া যেখানে কম্পিউটার এলগরিদমের মাধ্যমে ডেটা থেকে শিখে স্বয়ংক্রিয়ভাবে সিদ্ধান্ত নিতে সক্ষম হয়, যা পরবর্তীতে বিভিন্ন সমস্যার সমাধানে ব্যবহৃত হয়।",
    "example": "চিত্র সনাক্তকরণ ও ভাষা বোঝাপড়ার জন্য মেশিন লার্নিং প্রযুক্তি ব্যাপকভাবে ব্যবহৃত হয়।",
    "category": "Artificial Intelligence",
    "translation": "মেশিন লার্নিং",
    "isFavorite": false
  },
  {
    "id": 11,
    "word": "IDE",
    "definition": "IDE বা ইন্টিগ্রেটেড ডেভেলপমেন্ট এনভায়রনমেন্ট হলো এমন একটি সফটওয়্যার টুল, যা কোড লেখা, সম্পাদনা, ডিবাগিং ও বিল্ডিং-এর জন্য সবকিছুই একত্রে প্রদান করে। এটি ডেভেলপারদের কাজের গতি ও দক্ষতা বাড়ায়।",
    "example": "IntelliJ IDEA একটি অত্যাধুনিক IDE হিসেবে Java ডেভেলপমেন্টে ব্যবহৃত হয়।",
    "category": "Development Tools",
    "translation": "আইডিই",
    "isFavorite": false
  },
  {
    "id": 12,
    "word": "Object-Oriented Programming",
    "definition": "অবজেক্ট-ওরিয়েন্টেড প্রোগ্রামিং (OOP) হলো এমন এক প্রোগ্রামিং প্যারাডাইম, যেখানে কোডকে অবজেক্ট হিসেবে ভাগ করা হয়। প্রতিটি অবজেক্টে ডেটা এবং মেথড সংযুক্ত থাকে, যা বাস্তব জীবনের জটিল সমস্যার সমাধানকে সহজ করে তোলে।",
    "example": "Java ভাষায় অবজেক্ট-ওরিয়েন্টেড প্রোগ্রামিংয়ের মাধ্যমে কোডকে মডুলার ও পুনর্ব্যবহারযোগ্য করা হয়।",
    "category": "Programming",
    "translation": "অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং",
    "isFavorite": false
  },
  {
    "id": 13,
    "word": "Function",
    "definition": "ফাংশন হলো কোডের একটি স্বতন্ত্র ব্লক, যা নির্দিষ্ট কাজ সম্পাদনের জন্য তৈরি করা হয়। এটি ইনপুট নিয়ে আউটপুট প্রদান করে এবং প্রোগ্রামের পুনঃব্যবহারযোগ্য অংশ হিসেবে ব্যবহৃত হয়।",
    "example": "Python এ def কীওয়ার্ড ব্যবহার করে ফাংশন তৈরি করা হয়।",
    "category": "Programming",
    "translation": "ফাংশন",
    "isFavorite": false
  },
  {
    "id": 14,
    "word": "Variable",
    "definition": "ভেরিয়েবল হলো একটি নামযুক্ত ডেটা স্টোরেজ, যা প্রোগ্রামের চলাকালীন মান ধারণ করে। এটি ডেটা সংরক্ষণ ও ব্যবহারের জন্য একটি পরিবর্তনশীল রূপ ধারণ করে।",
    "example": "JavaScript এ let বা var ব্যবহার করে ভেরিয়েবল ডিক্লেয়ার করা হয়।",
    "category": "Programming",
    "translation": "চর",
    "isFavorite": false
  },
  {
    "id": 15,
    "word": "Constant",
    "definition": "ধ্রুবক বা কনস্ট্যান্ট হলো এমন এক ধরনের ভেরিয়েবল যার মান প্রোগ্রামের চলাকালীন পরিবর্তিত হয় না। এটি নির্দিষ্ট তথ্যকে অপরিবর্তিত রাখার জন্য ব্যবহৃত হয়।",
    "example": "C++ এ const কীওয়ার্ড ব্যবহার করে ধ্রুবক নির্ধারণ করা হয়।",
    "category": "Programming",
    "translation": "ধ্রুবক",
    "isFavorite": false
  },
  {
    "id": 16,
    "word": "Loop",
    "definition": "লুপ হলো প্রোগ্রামিংয়ের একটি নিয়ন্ত্রণ কাঠামো, যা নির্দিষ্ট শর্ত পূরণ না হওয়া পর্যন্ত একই কোড ব্লককে পুনরাবৃত্তি করে চালায়। এটি বারংবার কাজ করার জন্য খুবই কার্যকর।",
    "example": "for লুপ ব্যবহার করে একটি তালিকার প্রতিটি উপাদান প্রক্রিয়া করা যায়।",
    "category": "Programming",
    "translation": "লুপ",
    "isFavorite": false
  },
  {
    "id": 17,
    "word": "Conditional Statement",
    "definition": "শর্তাধীন বিবৃতি হলো এমন একটি নিয়ন্ত্রণ কাঠামো, যা নির্দিষ্ট শর্ত অনুযায়ী কোডের কোনো অংশ চালু বা নিষ্ক্রিয় করে। এটি প্রোগ্রামে সিদ্ধান্ত গ্রহণে সহায়ক।",
    "example": "if-else স্টেটমেন্ট ব্যবহার করে বিভিন্ন শর্ত অনুযায়ী কোড এক্সিকিউশন করা হয়।",
    "category": "Programming",
    "translation": "শর্তাধীন বিবৃতি",
    "isFavorite": false
  },
  {
    "id": 18,
    "word": "Array",
    "definition": "অ্যারে হলো একই ধরণের একাধিক ডেটা আইটেম সংরক্ষণের একটি পদ্ধতি, যেখানে প্রতিটি আইটেম একটি নির্দিষ্ট ক্রম অনুসারে অবস্থান করে। এটি ডেটা সংগ্রহের দ্রুত অ্যাক্সেস ও পরিচালনার জন্য ব্যবহৃত হয়।",
    "example": "Java এ int[] ব্যবহার করে পূর্ণসংখ্যার একটি অ্যারে তৈরি করা যায়।",
    "category": "Data Structures",
    "translation": "অ্যারে",
    "isFavorite": false
  },
  {
    "id": 19,
    "word": "String",
    "definition": "স্ট্রিং হলো অক্ষরগুলির একটি সিকোয়েন্স, যা সাধারণত টেক্সট ডেটা প্রদর্শন এবং প্রক্রিয়াকরণের জন্য ব্যবহৃত হয়। এটি ব্যবহার করে পাঠ্য তথ্য সহজে সঞ্চিত ও হস্তান্তর করা যায়।",
    "example": "Python এ \"Hello, World!\" একটি স্ট্রিং হিসাবে বিবেচিত হয়।",
    "category": "Programming",
    "translation": "স্ট্রিং",
    "isFavorite": false
  },
  {
    "id": 20,
    "word": "Boolean",
    "definition": "বুলিয়ান হলো একটি ডেটা টাইপ, যা কেবলমাত্র দুটি মান – সত্য (true) বা মিথ্যা (false) – ধারণ করতে পারে। এটি প্রোগ্রামের শর্তাধীন লজিক তৈরিতে অপরিহার্য ভূমিকা পালন করে।",
    "example": "JavaScript এ true বা false ব্যবহার করে লজিক্যাল অপারেশন করা হয়।",
    "category": "Programming",
    "translation": "বুলিয়ান",
    "isFavorite": false
  },
  {
    "id": 21,
    "word": "Exception",
    "definition": "এক্সেপশন হলো প্রোগ্রাম চলাকালীন ঘটে যাওয়া অনাকাঙ্ক্ষিত ত্রুটি বা ব্যতিক্রম, যা স্বাভাবিক কার্যপ্রবাহে বিঘ্ন সৃষ্টি করে। ডেভেলপাররা বিশেষভাবে try-catch ব্লকের মাধ্যমে এই সমস্যা সমাধানের ব্যবস্থা নেন।",
    "example": "ডাটাবেজ সংযোগ সমস্যা হলে try-catch ব্লকের মাধ্যমে exception হ্যান্ডেল করা হয়।",
    "category": "Error Handling",
    "translation": "এক্সেপশন",
    "isFavorite": false
  },
  {
    "id": 22,
    "word": "Inheritance",
    "definition": "উত্তরাধিকার বা ইনহেরিটেন্স হলো অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিংয়ের একটি মূল নীতি, যেখানে এক ক্লাসের বৈশিষ্ট্য ও মেথড অন্য ক্লাসে স্থানান্তর করা হয়। এটি কোড পুনর্ব্যবহারযোগ্যতা ও সিস্টেমের জটিলতা কমাতে সহায়ক।",
    "example": "Java-তে subclass ক্লাস parent class এর বৈশিষ্ট্য উত্তরাধিকার সূত্রে পায়।",
    "category": "OOP Concepts",
    "translation": "উত্তরাধিকার",
    "isFavorite": false
  },
  {
    "id": 23,
    "word": "Polymorphism",
    "definition": "বহুরূপতা বা পলিমর্ফিজম হলো অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিংয়ের এমন একটি ধারণা, যার মাধ্যমে একই নামের মেথড বিভিন্ন অবজেক্টে ভিন্ন ভিন্ন রূপে কাজ করতে সক্ষম হয়। এটি প্রোগ্রামকে আরও নমনীয় এবং সম্প্রসারণযোগ্য করে।",
    "example": "একই মেথড বিভিন্ন অবজেক্টে ভিন্নভাবে কাজ করে, যেমন গাড়ির বিভিন্ন মডেলে স্টিয়ারিং কন্ট্রোল।",
    "category": "OOP Concepts",
    "translation": "বহুরূপতা",
    "isFavorite": false
  },
  {
    "id": 24,
    "word": "Encapsulation",
    "definition": "এনক্যাপসুলেশন হলো ডেটা ও মেথডকে একত্রে আবদ্ধ করার একটি পদ্ধতি, যাতে বাইরে থেকে সরাসরি ডেটা পরিবর্তন করা না যায়। এটি নিরাপত্তা এবং কোডের সুনির্দিষ্ট কাঠামো বজায় রাখতে সহায়ক।",
    "example": "Java এ private access modifier ব্যবহার করে এনক্যাপসুলেশন নিশ্চিত করা হয়।",
    "category": "OOP Concepts",
    "translation": "অন্তর্ভুক্তি",
    "isFavorite": false
  },
  {
    "id": 25,
    "word": "Abstraction",
    "definition": "অ্যাবস্ট্রাকশন হলো এমন একটি প্রক্রিয়া, যার মাধ্যমে জটিল সিস্টেমের শুধু প্রয়োজনীয় ও গুরুত্বপূর্ণ অংশ প্রকাশ করা হয়, আর অবশিষ্ট অংশ গোপন রাখা হয়। এটি ডেভেলপমেন্টকে সহজ ও বোধগম্য করে।",
    "example": "ইন্টারফেস ব্যবহার করে বাস্তবায়নের জটিলতা লুকিয়ে রাখা যায়।",
    "category": "OOP Concepts",
    "translation": "অমূর্ততা",
    "isFavorite": false
  },
  {
    "id": 26,
    "word": "Recursion",
    "definition": "রিকার্শন হলো একটি ফাংশনের মধ্য দিয়ে নিজেকে পুনরাবৃত্তি করে কল করার প্রক্রিয়া, যা জটিল সমস্যার সমাধানকে সরলীকৃত করতে ব্যবহৃত হয়। এটি সঠিকভাবে প্রয়োগ করলে কার্যকরী ও পরিষ্কার সমাধান প্রদান করে।",
    "example": "ফ্যাক্টোরিয়াল হিসাব করতে একটি ফাংশন নিজেই নিজেকে কল করে রিকার্শন ব্যবহার করা হয়।",
    "category": "Programming",
    "translation": "পুনরাবৃত্তি",
    "isFavorite": false
  },
  {
    "id": 27,
    "word": "Parameter",
    "definition": "প্যারামিটার হলো ফাংশনে ইনপুট হিসেবে পাঠানো ভেরিয়েবল, যা ফাংশনের অভ্যন্তরে ব্যবহৃত হয় এবং তার কার্যক্রম নির্ধারণে গুরুত্বপূর্ণ ভূমিকা পালন করে।",
    "example": "একটি গণনার ফাংশনে ইনপুট হিসেবে সংখ্যা পাঠাতে প্যারামিটার ব্যবহৃত হয়।",
    "category": "Programming",
    "translation": "প্যারামিটার",
    "isFavorite": false
  },
  {
    "id": 28,
    "word": "Argument",
    "definition": "আর্গুমেন্ট হলো ফাংশনে পাস করা নির্দিষ্ট মান বা তথ্য, যা পূর্ব নির্ধারিত প্যারামিটারের সাথে মিলে কাজ করে এবং ফাংশনের ফলাফল নির্ধারণে সহায়ক।",
    "example": "ফাংশনে ৫ সংখ্যাটি আর্গুমেন্ট হিসেবে পাঠালে সেটিই হিসাবের ভিত্তি হয়।",
    "category": "Programming",
    "translation": "আর্গুমেন্ট",
    "isFavorite": false
  },
  {
    "id": 29,
    "word": "Data Structure",
    "definition": "ডেটা স্ট্রাকচার হলো এমন একটি পদ্ধতি, যা ডেটাকে সংগঠিত এবং সংরক্ষণের জন্য বিভিন্ন ফর্ম্যাটে সাজানো হয়। এর মাধ্যমে ডেটার দ্রুত অনুসন্ধান, হালনাগাদ ও ব্যবস্থাপনা করা সম্ভব হয়।",
    "example": "অ্যারে, লিঙ্কড লিস্ট, স্ট্যাক প্রভৃতি ডেটা স্ট্রাকচার উদাহরণ হিসেবে ব্যবহার করা হয়।",
    "category": "Data Structures",
    "translation": "ডেটা স্ট্রাকচার",
    "isFavorite": false
  },
  {
    "id": 30,
    "word": "Linked List",
    "definition": "লিঙ্কড লিস্ট হলো একটি ডেটা স্ট্রাকচার, যেখানে প্রতিটি নোডে ডেটা এবং পরবর্তী নোডের ঠিকানা থাকে। এটি ডেটা যোগ, মুছে ফেলা ও সঞ্চালনের ক্ষেত্রে খুবই কার্যকর।",
    "example": "একক লিঙ্কড লিস্টে প্রতিটি নোড পরবর্তী নোডের সাথে যুক্ত থাকে।",
    "category": "Data Structures",
    "translation": "লিঙ্কড লিস্ট",
    "isFavorite": false
  },
  {
    "id": 31,
    "word": "Stack",
    "definition": "স্ট্যাক হলো একটি ডেটা স্ট্রাকচার, যা লাস্ট ইন ফার্স্ট আউট (LIFO) নীতিতে কাজ করে। এতে সর্বশেষে যোগ করা আইটেমটি প্রথমে বের করা হয়, যা নির্দিষ্ট ধরনের সমস্যার সমাধানে ব্যবহার করা হয়।",
    "example": "ব্রাউজারের ইতিহাস সংরক্ষণের জন্য স্ট্যাক পদ্ধতি ব্যবহৃত হয়।",
    "category": "Data Structures",
    "translation": "স্ট্যাক",
    "isFavorite": false
  },
  {
    "id": 32,
    "word": "Queue",
    "definition": "কিউ হলো এমন একটি ডেটা স্ট্রাকচার, যেখানে প্রথমে যোগ করা আইটেমটি প্রথমেই সরিয়ে নেওয়া হয় (FIFO)। এটি কাজের ক্রমান্বয়ে প্রক্রিয়াকরণে ব্যবহার করা হয়।",
    "example": "প্রিন্ট জবগুলোকে কিউ মডেলে সাজিয়ে কাজ করানো হয়।",
    "category": "Data Structures",
    "translation": "কিউ",
    "isFavorite": false
  },
  {
    "id": 33,
    "word": "Tree",
    "definition": "ট্রি হলো একটি হায়ারার্কিকাল ডেটা স্ট্রাকচার, যেখানে এক বা একাধিক নোড একে অপরের সাথে সংযুক্ত থাকে। প্রতিটি নোড থেকে শাখা তৈরি হয়, যা সিস্টেমের ডেটা উপস্থাপনাকে সুসংগঠিত করে।",
    "example": "ফাইল সিস্টেম সাধারণত ট্রি স্ট্রাকচারের উপর ভিত্তি করে ডিজাইন করা হয়।",
    "category": "Data Structures",
    "translation": "গাছ",
    "isFavorite": false
  },
  {
    "id": 34,
    "word": "Graph",
    "definition": "গ্রাফ হলো একটি ডেটা স্ট্রাকচার, যেখানে নোডগুলোর মধ্যে সম্পর্ক রেখার মাধ্যমে প্রদর্শিত হয়। এটি জটিল সম্পর্ক ও নেটওয়ার্ক বিশ্লেষণে ব্যাপকভাবে ব্যবহৃত হয়।",
    "example": "সোশ্যাল নেটওয়ার্কে বন্ধুদের সম্পর্ক গ্রাফ আকারে উপস্থাপিত হয়।",
    "category": "Data Structures",
    "translation": "গ্রাফ",
    "isFavorite": false
  },
  {
    "id": 35,
    "word": "Hash Table",
    "definition": "হ্যাশ টেবিল হলো এমন একটি ডেটা স্ট্রাকচার, যা কী-ভ্যালু জোড়ার মাধ্যমে ডেটাকে সংগঠিত করে। এটি দ্রুত অনুসন্ধান এবং ডেটা রিট্রিভাল নিশ্চিত করতে বিশেষভাবে উপযোগী।",
    "example": "ডিকশনারি ডেটা স্ট্রাকচারে হ্যাশ টেবিলের ব্যবহার দেখা যায়।",
    "category": "Data Structures",
    "translation": "হ্যাশ টেবিল",
    "isFavorite": false
  },
  {
    "id": 36,
    "word": "Big O Notation",
    "definition": "বিগ ও নোটেশন হলো অ্যালগরিদমের টাইম কমপ্লেক্সিটি এবং কর্মক্ষমতা বিশ্লেষণের একটি মানদণ্ড, যা বিভিন্ন অ্যালগরিদমের দক্ষতা তুলনা করতে সহায়তা করে।",
    "example": "একটি অ্যালগরিদমের টাইম কমপ্লেক্সিটি বিশ্লেষণে Big O নোটেশন ব্যবহার করা হয়।",
    "category": "Algorithms",
    "translation": "বিগ ও নোটেশন",
    "isFavorite": false
  },
  {
    "id": 37,
    "word": "REST",
    "definition": "রেস্ট বা Representational State Transfer হলো ওয়েব সার্ভিস ডিজাইনের একটি আর্কিটেকচারাল স্টাইল, যা ক্লায়েন্ট-সার্ভার মডেল অনুসরণ করে এবং সহজ, স্কেলেবিল ও কার্যকর API তৈরি করতে সহায়তা করে।",
    "example": "RESTful API তৈরি করে ওয়েবসাইটে ডেটা আদানপ্রদান করা হয়।",
    "category": "Web Development",
    "translation": "রেস্ট",
    "isFavorite": false
  },
  {
    "id": 38,
    "word": "SOAP",
    "definition": "সোয়াপ হলো ওয়েব সার্ভিসের জন্য একটি প্রোটোকল, যা XML ফরম্যাটে তথ্য আদানপ্রদান করে এবং নির্দিষ্ট নিয়মাবলী মেনে সার্ভিস কমিউনিকেশন পরিচালনা করে।",
    "example": "এন্টারপ্রাইজ সফটওয়্যারে SOAP প্রোটোকল ব্যবহৃত হয়।",
    "category": "Web Services",
    "translation": "সোয়াপ",
    "isFavorite": false
  },
  {
    "id": 39,
    "word": "HTTP",
    "definition": "এইচটিটিপি (HTTP) হলো ওয়েবের জন্য একটি স্ট্যান্ডার্ড প্রোটোকল, যা ক্লায়েন্ট এবং সার্ভারের মধ্যে ডেটা আদানপ্রদান ও যোগাযোগ নিশ্চিত করে।",
    "example": "ওয়েব ব্রাউজার HTTP ব্যবহার করে ওয়েব পেজ রিকুয়েস্ট করে।",
    "category": "Networking",
    "translation": "এইচটিটিপি",
    "isFavorite": false
  },
  {
    "id": 40,
    "word": "HTTPS",
    "definition": "এইচটিটিপিএস (HTTPS) হলো HTTP এর নিরাপদ সংস্করণ, যা ডেটা এনক্রিপশন ও নিরাপত্তা নিশ্চিত করে, বিশেষ করে সংবেদনশীল তথ্য আদানপ্রদানের ক্ষেত্রে।",
    "example": "ব্যাংকিং ওয়েবসাইটে HTTPS ব্যবহার করে তথ্য নিরাপত্তা বজায় রাখা হয়।",
    "category": "Networking",
    "translation": "এইচটিটিপিএস",
    "isFavorite": false
  },
  {
    "id": 41,
    "word": "SSL/TLS",
    "definition": "এসএসএল/টিএলএস হলো ইন্টারনেট যোগাযোগকে এনক্রিপ্ট করে নিরাপদ করার জন্য ব্যবহৃত প্রোটোকল, যা ডেটা আদানপ্রদানে সুরক্ষা প্রদান করে।",
    "example": "ওয়েবসাইটে SSL সার্টিফিকেট প্রয়োগ করে ব্যবহারকারীর তথ্য সুরক্ষিত রাখা হয়।",
    "category": "Security",
    "translation": "এসএসএল/টিএলএস",
    "isFavorite": false
  },
  {
    "id": 42,
    "word": "JSON",
    "definition": "জেসন হলো একটি হালকা ও সহজ পাঠযোগ্য ডেটা বিনিময় বিন্যাস, যা ওয়েব সার্ভিস ও অ্যাপ্লিকেশনে তথ্য আদানপ্রদানের জন্য ব্যাপকভাবে ব্যবহৃত হয়।",
    "example": "ওয়েব API গুলো JSON ফরম্যাটে ডেটা রিটার্ন করে।",
    "category": "Data Format",
    "translation": "জেসন",
    "isFavorite": false
  },
  {
    "id": 43,
    "word": "XML",
    "definition": "এক্সএমএল হলো একটি মার্কআপ ভাষা, যা ডেটা সংরক্ষণ ও ট্রান্সপোর্টের জন্য ব্যবহার করা হয়। এটি ডেটাকে স্ট্রাকচার্ড এবং হায়ারার্কিক্যাল ফরম্যাটে উপস্থাপন করে।",
    "example": "কনফিগারেশন ফাইল হিসেবে XML ব্যবহৃত হয়।",
    "category": "Data Format",
    "translation": "এক্সএমএল",
    "isFavorite": false
  },
  {
    "id": 44,
    "word": "YAML",
    "definition": "ইয়ামেল হলো একটি সহজ ও পাঠযোগ্য ডেটা বিনিময় বিন্যাস, যা বিশেষ করে কনফিগারেশন ফাইল তৈরিতে ব্যবহৃত হয়। এটি মানুষের জন্য খুবই বোধগম্য।",
    "example": "Docker Compose ফাইল YAML ফরম্যাটে লেখা হয়।",
    "category": "Data Format",
    "translation": "ইয়ামেল",
    "isFavorite": false
  },
  {
    "id": 45,
    "word": "HTML",
    "definition": "এইচটিএমএল হলো ওয়েব পেজ তৈরির জন্য মূল মার্কআপ ভাষা, যা ওয়েবসাইটের স্ট্রাকচার এবং উপাদানগুলো নির্ধারণ করে। এটি ওয়েব ডেভেলপমেন্টের ভিত্তি হিসেবে কাজ করে।",
    "example": "ওয়েবসাইট তৈরিতে HTML ব্যবহার করে পেজের কাঠামো নির্ধারণ করা হয়।",
    "category": "Web Development",
    "translation": "এইচটিএমএল",
    "isFavorite": false
  },
  {
    "id": 46,
    "word": "CSS",
    "definition": "সিএসএস হলো একটি স্টাইল শীট ভাষা, যা HTML এর উপরে ভিত্তি করে ওয়েব পেজের ডিজাইন, বিন্যাস ও লেআউট নির্ধারণ করে। এটি ওয়েবসাইটকে সুন্দর এবং ব্যবহারকারীবান্ধব করে তোলে।",
    "example": "ওয়েব পেজের রঙ, ফন্ট ও বিন্যাস ঠিক করতে CSS ব্যবহার করা হয়।",
    "category": "Web Development",
    "translation": "সিএসএস",
    "isFavorite": false
  },
  {
    "id": 47,
    "word": "JavaScript",
    "definition": "জাভাস্ক্রিপ্ট হলো একটি ডাইনামিক স্ক্রিপ্টিং ভাষা, যা ওয়েব পেজে ইন্টারেক্টিভ ফাংশন যোগ করে এবং ইউজার ইন্টারফেসের সাথে সরাসরি যোগাযোগ করতে সক্ষম করে।",
    "example": "ফর্ম ভ্যালিডেশনের জন্য JavaScript ব্যবহার করা হয়।",
    "category": "Web Development",
    "translation": "জাভাস্ক্রিপ্ট",
    "isFavorite": false
  },
  {
    "id": 48,
    "word": "Python",
    "definition": "পাইথন হলো একটি উচ্চস্তরের, সহজবোধ্য ও বহুমুখী প্রোগ্রামিং ভাষা, যা ডেটা বিশ্লেষণ, ওয়েব ডেভেলপমেন্ট এবং স্বয়ংক্রিয়করণে ব্যাপকভাবে ব্যবহৃত হয়।",
    "example": "ডেটা সায়েন্স প্রজেক্টে Python ব্যাপকভাবে ব্যবহার করা হয়।",
    "category": "Programming",
    "translation": "পাইথন",
    "isFavorite": false
  },
  {
    "id": 49,
    "word": "Java",
    "definition": "জাভা হলো একটি অবজেক্ট-ওরিয়েন্টেড প্রোগ্রামিং ভাষা, যা প্ল্যাটফর্ম স্বাধীনতা ও নিরাপত্তার জন্য বিশ্বব্যাপী জনপ্রিয়। এটি এন্টারপ্রাইজ অ্যাপ্লিকেশন থেকে মোবাইল অ্যাপ পর্যন্ত বিভিন্ন ক্ষেত্রে ব্যবহৃত হয়।",
    "example": "এন্ড্রয়েড অ্যাপ ডেভেলপমেন্টে Java ব্যাপকভাবে ব্যবহৃত হয়।",
    "category": "Programming",
    "translation": "জাভা",
    "isFavorite": false
  },
  {
    "id": 50,
    "word": "C#",
    "definition": "সি# হলো মাইক্রোসফট দ্বারা নির্মিত একটি অবজেক্ট-ওরিয়েন্টেড প্রোগ্রামিং ভাষা, যা ডটনেট প্ল্যাটফর্মে অ্যাপ্লিকেশন তৈরিতে ব্যবহৃত হয়। এটি আধুনিক ফিচার ও নিরাপত্তা প্রদান করে।",
    "example": "ডটনেট অ্যাপ্লিকেশনে C# ব্যবহার করে সফটওয়্যার তৈরি করা হয়।",
    "category": "Programming",
    "translation": "সি#",
    "isFavorite": false
  },
  {
    "id": 51,
    "word": "Ruby",
    "definition": "রুবি হলো একটি গতিশীল, অবজেক্ট-ওরিয়েন্টেড প্রোগ্রামিং ভাষা, যা সহজ পাঠ্যতা ও প্রাকৃতিক সিনট্যাক্সের জন্য পরিচিত। এটি দ্রুত এবং সুন্দর কোড লেখার পরিবেশ তৈরি করে।",
    "example": "Ruby on Rails ফ্রেমওয়ার্ক ব্যবহার করে ওয়েব অ্যাপ তৈরি করা হয়।",
    "category": "Programming",
    "translation": "রুবি",
    "isFavorite": false
  },
  {
    "id": 52,
    "word": "PHP",
    "definition": "পিএইচপি হলো একটি সার্ভার-সাইড স্ক্রিপ্টিং ভাষা, যা ডায়নামিক ও ইন্টারেক্টিভ ওয়েবসাইট তৈরিতে ব্যবহৃত হয়। এটি সহজে শেখার এবং বহুমুখী ব্যবহারযোগ্যতার জন্য জনপ্রিয়।",
    "example": "WordPress ওয়েবসাইটগুলো PHP ভিত্তিক।",
    "category": "Web Development",
    "translation": "পিএইচপি",
    "isFavorite": false
  },
  {
    "id": 53,
    "word": "Swift",
    "definition": "সুইফট হলো অ্যাপলের নির্মিত একটি আধুনিক প্রোগ্রামিং ভাষা, যা iOS এবং macOS এর জন্য দ্রুত এবং নিরাপদ অ্যাপ ডেভেলপমেন্টে ব্যবহৃত হয়। এটি কোডের পাঠযোগ্যতা ও কর্মক্ষমতা বৃদ্ধিতে সহায়ক।",
    "example": "iOS অ্যাপ উন্নয়নে Swift একটি জনপ্রিয় পছন্দ।",
    "category": "Programming",
    "translation": "সুইফট",
    "isFavorite": false
  },
  {
    "id": 54,
    "word": "Kotlin",
    "definition": "কটলিন হলো একটি আধুনিক, স্ট্যাটিক টাইপড প্রোগ্রামিং ভাষা, যা জাভার সাথে সামঞ্জস্যপূর্ণ এবং এন্ড্রয়েড ডেভেলপমেন্টে দ্রুত জনপ্রিয়তা অর্জন করেছে।",
    "example": "এন্ড্রয়েড অ্যাপ তৈরিতে Kotlin ব্যবহার করা হয়।",
    "category": "Programming",
    "translation": "কটলিন",
    "isFavorite": false
  },
  {
    "id": 55,
    "word": "TypeScript",
    "definition": "টাইপস্ক্রিপ্ট হলো জাভাস্ক্রিপ্টের একটি সুপারসেট, যা স্ট্যাটিক টাইপিং সংযোজন করে এবং বড় আকারের অ্যাপ্লিকেশনের জন্য কোডের মান এবং নিরাপত্তা বৃদ্ধি করে।",
    "example": "Angular এ টাইপস্ক্রিপ্ট ব্যবহৃত হয় উন্নত কোড রাইটেবিলিটির জন্য।",
    "category": "Web Development",
    "translation": "টাইপস্ক্রিপ্ট",
    "isFavorite": false
  },
  {
    "id": 56,
    "word": "SQL",
    "definition": "এসকিউএল হলো একটি স্ট্যান্ডার্ড প্রোগ্রামিং ভাষা, যা রিলেশনাল ডাটাবেজে ডেটা সংরক্ষণ, অনুসন্ধান ও পরিচালনার জন্য ব্যবহৃত হয়। এটি ডেটাবেজ ম্যানেজমেন্ট সিস্টেমের একটি অপরিহার্য অংশ।",
    "example": "ডেটা রিট্রিভ করার জন্য SQL কোয়েরি লেখা হয়।",
    "category": "Data Management",
    "translation": "এসকিউএল",
    "isFavorite": false
  },
  {
    "id": 57,
    "word": "NoSQL",
    "definition": "নোএসকিউএল হলো এমন একটি ডাটাবেজ প্রযুক্তি, যা স্কিমাহীন ডেটা স্টোরেজের মাধ্যমে বড় ও পরিবর্তনশীল ডেটা পরিচালনা করতে সক্ষম। এটি রিলেশনাল ডাটাবেজের বিকল্প হিসেবে ব্যবহৃত হয়।",
    "example": "MongoDB একটি জনপ্রিয় NoSQL ডাটাবেজ।",
    "category": "Data Management",
    "translation": "নোএসকিউএল",
    "isFavorite": false
  },
  {
    "id": 58,
    "word": "MVC (Model-View-Controller)",
    "definition": "এমভিসি হলো একটি ডিজাইন প্যাটার্ন, যা অ্যাপ্লিকেশনকে মডেল, ভিউ এবং কন্ট্রোলারে ভাগ করে। এর মাধ্যমে কোডের স্পষ্ট বিভাজন ও রক্ষণাবেক্ষণ সহজ হয় এবং ডেভেলপমেন্ট প্রক্রিয়া দ্রুত হয়।",
    "example": "ASP.NET MVC ব্যবহার করে ওয়েব অ্যাপ তৈরি করা হয়।",
    "category": "Software Architecture",
    "translation": "এমভিসি",
    "isFavorite": false
  },
  {
    "id": 59,
    "word": "Microservices",
    "definition": "মাইক্রোসার্ভিস হলো এমন একটি আর্কিটেকচারাল পদ্ধতি, যা একটি বৃহৎ অ্যাপ্লিকেশনকে ছোট ছোট, স্বাধীন সার্ভিসে ভাগ করে। প্রতিটি সার্ভিস স্বতন্ত্রভাবে কাজ করে এবং একসাথে কাজ করলে একটি শক্তিশালী সিস্টেম তৈরি করে।",
    "example": "একটি ই-কমার্স সাইটে পেমেন্ট, ইনভেন্টরি ও অর্ডার ম্যানেজমেন্ট আলাদা মাইক্রোসার্ভিস হিসেবে ব্যবহৃত হয়।",
    "category": "Software Architecture",
    "translation": "মাইক্রোসার্ভিস",
    "isFavorite": false
  },
  {
    "id": 60,
    "word": "Containerization",
    "definition": "কন্টেইনারাইজেশন হলো একটি প্রযুক্তি, যা অ্যাপ্লিকেশন এবং তার নির্ভরতাগুলোকে হালকা ও পোর্টেবল কন্টেইনারে প্যাকেজ করে, ফলে পরিবেশ পরিবর্তন হলেও একইভাবে চালানো যায়।",
    "example": "Docker ব্যবহার করে অ্যাপ্লিকেশনগুলো কন্টেইনারে চালানো হয়।",
    "category": "Deployment",
    "translation": "কন্টেইনারাইজেশন",
    "isFavorite": false
  },
  {
    "id": 61,
    "word": "Docker",
    "definition": "ডকার হলো একটি জনপ্রিয় কন্টেইনার প্ল্যাটফর্ম, যা ডেভেলপমেন্ট থেকে প্রোডাকশন পর্যন্ত অ্যাপ্লিকেশন ডেপ্লয়মেন্টকে সহজ ও দ্রুত করে তোলে। এটি বিভিন্ন পরিবেশে একই রকমের কার্যক্ষমতা নিশ্চিত করে।",
    "example": "বিভিন্ন সার্ভিস Docker কন্টেইনারে চালানো হয়।",
    "category": "Deployment",
    "translation": "ডকার",
    "isFavorite": false
  },
  {
    "id": 62,
    "word": "Kubernetes",
    "definition": "কুবেরনেটিস হলো একটি কন্টেইনার অর্কেস্ট্রেশন প্ল্যাটফর্ম, যা বৃহৎ পরিসরে কন্টেইনার পরিচালনা, স্কেলিং ও ম্যানেজমেন্টকে স্বয়ংক্রিয় করে। এটি ক্লাস্টার ম্যানেজমেন্টে অত্যন্ত কার্যকরী।",
    "example": "বৃহৎ আকারের ডেপ্লয়মেন্টে Kubernetes ব্যবহৃত হয়।",
    "category": "Deployment",
    "translation": "কুবেরনেটিস",
    "isFavorite": false
  },
  {
    "id": 63,
    "word": "Cloud Computing",
    "definition": "ক্লাউড কম্পিউটিং হলো একটি প্রযুক্তি, যা ইন্টারনেটের মাধ্যমে কম্পিউটিং রিসোর্স, ডেটা ও সার্ভিস সরবরাহ করে। এটি হার্ডওয়্যার বা সফটওয়্যার ইনস্টলেশনের প্রয়োজন ছাড়াই সেবা প্রদান করে।",
    "example": "AWS, Azure ও Google Cloud ক্লাউড কম্পিউটিংয়ের উদাহরণ।",
    "category": "Infrastructure",
    "translation": "ক্লাউড কম্পিউটিং",
    "isFavorite": false
  },
  {
    "id": 64,
    "word": "SaaS",
    "definition": "সফটওয়্যার অ্যাজ এ সার্ভিস (SaaS) হলো একটি মডেল, যেখানে ক্লাউডের মাধ্যমে সফটওয়্যার অ্যাপ্লিকেশন প্রদান করা হয়। এতে ব্যবহারকারীরা ইন্টারনেটে প্রবেশ করে সরাসরি সফটওয়্যার ব্যবহার করতে পারে।",
    "example": "Salesforce হলো একটি জনপ্রিয় SaaS উদাহরণ।",
    "category": "Cloud Services",
    "translation": "সাস",
    "isFavorite": false
  },
  {
    "id": 65,
    "word": "PaaS",
    "definition": "প্ল্যাটফর্ম অ্যাজ এ সার্ভিস (PaaS) হলো একটি সেবা মডেল, যা ডেভেলপমেন্ট ও ডেপ্লয়মেন্টের জন্য প্রয়োজনীয় প্ল্যাটফর্ম এবং টুলস সরবরাহ করে। এতে ডেভেলপাররা দ্রুত এবং সহজে অ্যাপ তৈরি করতে পারেন।",
    "example": "Heroku একটি জনপ্রিয় PaaS সল্যুশন।",
    "category": "Cloud Services",
    "translation": "পাস",
    "isFavorite": false
  },
  {
    "id": 66,
    "word": "IaaS",
    "definition": "ইনফ্রাস্ট্রাকচার অ্যাজ এ সার্ভিস (IaaS) হলো একটি মডেল, যা ভার্চুয়ালাইজড হার্ডওয়্যার রিসোর্স যেমন সার্ভার, স্টোরেজ ও নেটওয়ার্ক সরবরাহ করে, যার মাধ্যমে ব্যবহারকারীরা নিজেদের প্রয়োজন অনুযায়ী ইনফ্রাস্ট্রাকচার ব্যবহার করতে পারেন।",
    "example": "Amazon EC2 IaaS এর অন্যতম উদাহরণ।",
    "category": "Cloud Services",
    "translation": "ইআস",
    "isFavorite": false
  },
  {
    "id": 67,
    "word": "DevOps",
    "definition": "ডেভঅপস হলো ডেভেলপমেন্ট এবং অপারেশনস টিমের মধ্যে সমন্বয় এবং স্বয়ংক্রিয়করণের মাধ্যমে সফটওয়্যার ডেপ্লয়মেন্ট ও রক্ষণাবেক্ষণকে দ্রুত ও কার্যকরী করার একটি পদ্ধতি।",
    "example": "DevOps সংস্কৃতি সফটওয়্যার উন্নয়নে ক্রমাগত পরিবর্তন ও উন্নতির প্রেরণা জোগায়।",
    "category": "Methodologies",
    "translation": "ডেভঅপস",
    "isFavorite": false
  },
  {
    "id": 68,
    "word": "Continuous Integration",
    "definition": "কন্টিনিউয়াস ইন্টিগ্রেশন (CI) হলো এমন একটি প্রক্রিয়া, যেখানে ডেভেলপাররা নিয়মিতভাবে কোড একত্রিত করেন এবং স্বয়ংক্রিয় টেস্টিং ও বিল্ডিংয়ের মাধ্যমে ত্রুটি দ্রুত শনাক্ত ও সমাধান করা হয়।",
    "example": "Jenkins ব্যবহার করে Continuous Integration প্রক্রিয়া বাস্তবায়ন করা হয়।",
    "category": "Methodologies",
    "translation": "সিআই",
    "isFavorite": false
  },
  {
    "id": 69,
    "word": "Continuous Deployment",
    "definition": "কন্টিনিউয়াস ডেপ্লয়মেন্ট (CD) হলো এমন একটি প্রক্রিয়া, যেখানে কোডের পরিবর্তনগুলো স্বয়ংক্রিয়ভাবে প্রোডাকশন পরিবেশে রিলিজ করা হয়, ফলে উন্নয়ন ও রিলিজের সময় কমে যায়।",
    "example": "অটোমেশন টুল ব্যবহার করে কোড পরিবর্তনগুলো প্রোডাকশনে স্বয়ংক্রিয়ভাবে ডেপ্লয় করা হয়।",
    "category": "Methodologies",
    "translation": "সিডি",
    "isFavorite": false
  },
  {
    "id": 70,
    "word": "Unit Testing",
    "definition": "ইউনিট টেস্টিং হলো কোডের ছোট ছোট ইউনিট বা মডিউলগুলোর কার্যকারিতা পরীক্ষা করার একটি পদ্ধতি, যা বাগ ও ত্রুটি দ্রুত শনাক্ত করে এবং কোডের মান উন্নত করে।",
    "example": "JUnit ব্যবহার করে Java কোডের ইউনিট টেস্টিং করা হয়।",
    "category": "Testing",
    "translation": "ইউনিট টেস্টিং",
    "isFavorite": false
  },
  {
    "id": 71,
    "word": "Integration Testing",
    "definition": "ইন্টিগ্রেশন টেস্টিং হলো একাধিক কোড মডিউল একত্রে কাজ করার সময় তাদের ইন্টারফেস ও সমন্বয় সঠিকভাবে কাজ করছে কিনা তা পরীক্ষা করার প্রক্রিয়া।",
    "example": "সিস্টেমের বিভিন্ন মডিউল একত্রে টেস্ট করা হয় ইন্টিগ্রেশন টেস্টিংয়ের মাধ্যমে।",
    "category": "Testing",
    "translation": "ইন্টিগ্রেশন টেস্টিং",
    "isFavorite": false
  },
  {
    "id": 72,
    "word": "Functional Testing",
    "definition": "ফাংশনাল টেস্টিং হলো সফটওয়্যারের প্রত্যেকটি ফাংশন বা কার্যক্রম ব্যবহারকারীর দৃষ্টিকোণ থেকে সঠিকভাবে কাজ করছে কিনা তা যাচাই করার একটি পদ্ধতি।",
    "example": "বিভিন্ন ইউজার সিচুয়েশন অনুযায়ী Functional Testing করা হয়।",
    "category": "Testing",
    "translation": "ফাংশনাল টেস্টিং",
    "isFavorite": false
  },
  {
    "id": 73,
    "word": "Debugging",
    "definition": "ডিবাগিং হলো কোডে থাকা ত্রুটি বা বাগ চিহ্নিত ও সংশোধন করার প্রক্রিয়া, যার মাধ্যমে সফটওয়্যারকে সঠিকভাবে কাজ করার উপযোগী করা হয়।",
    "example": "IDE তে ব্রেকপয়েন্ট ব্যবহার করে Debugging করা হয়।",
    "category": "Development Tools",
    "translation": "ডিবাগিং",
    "isFavorite": false
  },
  {
    "id": 74,
    "word": "Version Control",
    "definition": "ভার্সন কন্ট্রোল হলো এমন একটি পদ্ধতি, যা কোডের পরিবর্তনগুলির ইতিহাস সংরক্ষণ করে এবং একাধিক ডেভেলপারকে একসাথে কাজ করার সুযোগ দেয়।",
    "example": "Git একটি জনপ্রিয় ভার্সন কন্ট্রোল সিস্টেম।",
    "category": "Version Control",
    "translation": "ভার্সন কন্ট্রোল",
    "isFavorite": false
  },
  {
    "id": 75,
    "word": "Repository",
    "definition": "রিপোজিটরি হলো কোড, ডকুমেন্টেশন এবং অন্যান্য ডেটার সংরক্ষণের একটি কেন্দ্রীয় স্থান, যা ভার্সন কন্ট্রোল ব্যবস্থার মাধ্যমে পরিচালিত হয়।",
    "example": "GitHub এ বিভিন্ন প্রকল্পের কোড রিপোজিটরি হিসেবে ব্যবহৃত হয়।",
    "category": "Version Control",
    "translation": "রিপোজিটরি",
    "isFavorite": false
  },
  {
    "id": 76,
    "word": "Branch",
    "definition": "ব্রাঞ্চ হলো কোডের একটি পৃথক শাখা, যা মূল কোডবেস থেকে বিচ্ছিন্নভাবে নতুন ফিচার বা সংশোধনী তৈরিতে ব্যবহৃত হয়, যাতে মুল কোড অপরিবর্তিত থাকে।",
    "example": "নতুন ফিচার উন্নয়নের জন্য একটি নতুন branch তৈরি করা হয়।",
    "category": "Version Control",
    "translation": "ব্রাঞ্চ",
    "isFavorite": false
  },
  {
    "id": 77,
    "word": "Merge",
    "definition": "মার্জ হলো বিভিন্ন কোড শাখা একত্রিত করার প্রক্রিয়া, যার মাধ্যমে ভিন্ন ভিন্ন উন্নয়নের ফলাফলগুলোকে একত্র করে মূল কোডবেসে সংযুক্ত করা হয়।",
    "example": "কোড রিভিউ শেষে দুটি branch মার্জ করা হয়।",
    "category": "Version Control",
    "translation": "মার্জ",
    "isFavorite": false
  },
  {
    "id": 78,
    "word": "Pull Request",
    "definition": "পুল রিকুয়েস্ট হলো কোড পরিবর্তনের প্রস্তাবনা, যা রিভিউ এবং অনুমোদনের জন্য টিমের অন্যান্য সদস্যদের কাছে পাঠানো হয়। এটি কোড একত্রিত করার পূর্বে পর্যালোচনার একটি ধাপ।",
    "example": "GitHub এ Pull Request খোলা হয় কোড রিভিউয়ের জন্য।",
    "category": "Version Control",
    "translation": "পুল রিকুয়েস্ট",
    "isFavorite": false
  },
  {
    "id": 79,
    "word": "Code Review",
    "definition": "কোড রিভিউ হলো এমন একটি প্রক্রিয়া, যেখানে টিমের অভিজ্ঞ সদস্যরা কোডের গুণমান, কার্যকারিতা এবং নিরাপত্তা যাচাই করে, যাতে কোডের ত্রুটি ও অসামঞ্জস্য দূর করা যায়।",
    "example": "সিনিয়র ডেভেলপাররা কোড রিভিউ করে কোডের মান উন্নত করেন।",
    "category": "Development Process",
    "translation": "কোড রিভিউ",
    "isFavorite": false
  },
  {
    "id": 80,
    "word": "Agile",
    "definition": "এজাইল হলো একটি উন্নয়ন মেথডোলজি, যা পরিবর্তনশীল প্রয়োজন ও দ্রুত ডেলিভারি নিশ্চিত করতে ছোট ছোট স্প্রিন্টে কাজ করে। এটি টিমের মধ্যে যোগাযোগ ও সহযোগিতা বাড়ায়।",
    "example": "প্রতিটি স্প্রিন্ট শেষে এজাইল প্রক্রিয়ায় ফিডব্যাক নেওয়া হয়।",
    "category": "Methodologies",
    "translation": "এজাইল",
    "isFavorite": false
  },
  {
    "id": 81,
    "word": "Scrum",
    "definition": "স্ক্রাম হলো এজাইল ডেভেলপমেন্টের একটি ফ্রেমওয়ার্ক, যা দৈনিক মিটিং, স্প্রিন্ট পরিকল্পনা এবং রিভিউয়ের মাধ্যমে প্রকল্পের অগ্রগতি নিয়ন্ত্রণ করে।",
    "example": "প্রতিদিন স্ক্রাম মিটিংয়ে টিম সদস্যরা তাদের কাজের আপডেট দেন।",
    "category": "Methodologies",
    "translation": "স্ক্রাম",
    "isFavorite": false
  },
  {
    "id": 82,
    "word": "Kanban",
    "definition": "কানবান হলো একটি ভিজ্যুয়াল ম্যানেজমেন্ট সিস্টেম, যা কাজের প্রবাহকে বোর্ডের মাধ্যমে পর্যবেক্ষণ ও নিয়ন্ত্রণ করে, ফলে টাস্ক সম্পন্নের প্রক্রিয়া সহজ হয়।",
    "example": "প্রজেক্ট ম্যানেজমেন্টে কাজের অগ্রগতি ট্র্যাক করতে Kanban বোর্ড ব্যবহার করা হয়।",
    "category": "Methodologies",
    "translation": "কানবান",
    "isFavorite": false
  },
  {
    "id": 83,
    "word": "Waterfall Model",
    "definition": "ওয়াটারফল মডেল হলো একটি সিকুয়েন্সিয়াল ডেভেলপমেন্ট মেথডোলজি, যেখানে প্রতিটি পর্যায় সম্পূর্ণ হলে পরবর্তী পর্যায়ে যাওয়া হয়। এটি একটি রৈখিক প্রক্রিয়া, যেখানে পূর্ববর্তী ধাপ পুনর্বিবেচনার সুযোগ কম থাকে।",
    "example": "পুরানো প্রজেক্ট ম্যানেজমেন্টে Waterfall Model ব্যবহার করা হতো।",
    "category": "Methodologies",
    "translation": "ওয়াটারফল মডেল",
    "isFavorite": false
  },
  {
    "id": 84,
    "word": "Responsive Design",
    "definition": "রেসপন্সিভ ডিজাইন হলো ওয়েবসাইট তৈরির একটি পদ্ধতি, যা বিভিন্ন ডিভাইস ও স্ক্রিন সাইজে স্বয়ংক্রিয়ভাবে মানানসই হয়ে থাকে। এতে ইউজারের অভিজ্ঞতা উন্নত হয় এবং বিভিন্ন প্ল্যাটফর্মে সাইটের কার্যকারিতা বজায় থাকে।",
    "example": "মোবাইল এবং ডেস্কটপে সমানভাবে কাজ করার জন্য Responsive Design অপরিহার্য।",
    "category": "Web Development",
    "translation": "রেসপন্সিভ ডিজাইন",
    "isFavorite": false
  },
  {
    "id": 85,
    "word": "Mobile First",
    "definition": "মোবাইল ফার্স্ট হলো এমন একটি নকশা ও উন্নয়ন কৌশল, যেখানে প্রথমে মোবাইল ডিভাইসের জন্য ডিজাইন তৈরি করা হয় এবং পরবর্তীতে অন্যান্য প্ল্যাটফর্মে প্রয়োগ করা হয়। এটি মোবাইল ব্যবহারকারীদের অভিজ্ঞতা সর্বোচ্চ করতে সহায়ক।",
    "example": "মোবাইল ফার্স্ট নীতিতে ডিজাইন করলে ছোট স্ক্রিনেও কার্যকরী ইউজার ইন্টারফেস পাওয়া যায়।",
    "category": "Web Development",
    "translation": "মোবাইল ফার্স্ট",
    "isFavorite": false
  },
  {
    "id": 86,
    "word": "Cross-Platform",
    "definition": "ক্রস-প্ল্যাটফর্ম হলো এমন একটি ধারণা, যেখানে একাধিক অপারেটিং সিস্টেম বা ডিভাইসে একই সফটওয়্যার কার্যকরী থাকে। এতে ডেভেলপাররা একটি কোডবেস ব্যবহার করে বিভিন্ন প্ল্যাটফর্মে অ্যাপ চালাতে পারেন।",
    "example": "Flutter ব্যবহার করে তৈরি অ্যাপগুলো ক্রস-প্ল্যাটফর্ম হতে পারে।",
    "category": "Software Development",
    "translation": "ক্রস-প্ল্যাটফর্ম",
    "isFavorite": false
  },
  {
    "id": 87,
    "word": "Virtual Machine",
    "definition": "ভার্চুয়াল মেশিন হলো সফটওয়্যার ভিত্তিক ইমুলেশন, যা একটি বাস্তব হার্ডওয়্যার কম্পিউটারের মতো কাজ করে। এতে একাধিক ভার্চুয়াল সিস্টেম তৈরি করে পৃথক পরিবেশে কাজ করা যায়।",
    "example": "VMware ব্যবহার করে বিভিন্ন ভার্চুয়াল মেশিন তৈরি করা যায়।",
    "category": "Infrastructure",
    "translation": "ভার্চুয়াল মেশিন",
    "isFavorite": false
  },
  {
    "id": 88,
    "word": "Emulation",
    "definition": "এমুলেশন হলো এমন একটি প্রক্রিয়া, যার মাধ্যমে একটি সিস্টেমের আচরণ অন্য সিস্টেমে পুনরায় তৈরি করা হয়। এটি সফটওয়্যার ও হার্ডওয়্যারের সমন্বয়ে মূল সিস্টেমের কার্যপ্রণালী নকল করে।",
    "example": "কনসোল গেমস এমুলেটরে খেলা যায়।",
    "category": "Development Tools",
    "translation": "এমুলেশন",
    "isFavorite": false
  },
  {
    "id": 89,
    "word": "Build Automation",
    "definition": "বিল্ড অটোমেশন হলো কোড কম্পাইল, টেস্ট এবং ডেপ্লয়মেন্টের প্রক্রিয়া স্বয়ংক্রিয় করার পদ্ধতি, যার ফলে ডেভেলপমেন্টের গতি বাড়ে এবং ত্রুটি কমে।",
    "example": "Maven ও Gradle বিল্ড টুল হিসেবে ব্যবহৃত হয়।",
    "category": "Development Tools",
    "translation": "বিল্ড অটোমেশন",
    "isFavorite": false
  },
  {
    "id": 90,
    "word": "Code Refactoring",
    "definition": "কোড রিফ্যাক্টরিং হলো কোডের কার্যকারিতা অপরিবর্তিত রেখে তার অভ্যন্তরীণ গঠন, পাঠযোগ্যতা এবং রক্ষণাবেক্ষণযোগ্যতা উন্নত করার প্রক্রিয়া।",
    "example": "কোডের রিডেবিলিটি বৃদ্ধির জন্য Refactoring করা হয়।",
    "category": "Development Process",
    "translation": "কোড রিফ্যাক্টরিং",
    "isFavorite": false
  },
  {
    "id": 91,
    "word": "Dependency Injection",
    "definition": "ডিপেন্ডেন্সি ইনজেকশন হলো একটি ডিজাইন প্যাটার্ন, যা অবজেক্টের প্রয়োজনীয় নির্ভরতাগুলো বাহ্যিকভাবে সরবরাহ করে, ফলে কোডের টেস্টেবিলিটি এবং নমনীয়তা বৃদ্ধি পায়।",
    "example": "Spring Framework-এ Dependency Injection ব্যবহৃত হয়।",
    "category": "Design Patterns",
    "translation": "ডিপেন্ডেন্সি ইনজেকশন",
    "isFavorite": false
  },
  {
    "id": 92,
    "word": "Design Pattern",
    "definition": "ডিজাইন প্যাটার্ন হলো এমন পুনঃব্যবহারযোগ্য সমাধান, যা সাধারণ সফটওয়্যার ডিজাইন সমস্যা মোকাবিলায় ব্যবহৃত হয়। এটি উন্নয়নের সময় সঠিক কাঠামো ও পদ্ধতি নির্ধারণে সহায়ক।",
    "example": "Factory, Singleton ও Observer ডিজাইন প্যাটার্ন খুবই পরিচিত।",
    "category": "Design Patterns",
    "translation": "ডিজাইন প্যাটার্ন",
    "isFavorite": false
  },
  {
    "id": 93,
    "word": "Singleton",
    "definition": "সিঙ্গেলটন একটি ডিজাইন প্যাটার্ন, যা নিশ্চিত করে যে একটি ক্লাসের মাত্র একটি ইনস্ট্যান্স তৈরি হবে এবং তা সার্বজনীনভাবে অ্যাক্সেসযোগ্য থাকবে।",
    "example": "ডাটাবেজ কানেকশন ম্যানেজমেন্টে Singleton প্যাটার্ন ব্যবহার করা হয়।",
    "category": "Design Patterns",
    "translation": "সিঙ্গেলটন",
    "isFavorite": false
  },
  {
    "id": 94,
    "word": "Observer Pattern",
    "definition": "অবজারভার প্যাটার্ন হলো একটি ডিজাইন প্যাটার্ন, যা অবজেক্টগুলোর মধ্যে সাবস্ক্রিপশন ভিত্তিক যোগাযোগ স্থাপন করে, যাতে এক অবজেক্টের অবস্থা পরিবর্তনের সাথে সাথে অন্য অবজেক্টগুলোও স্বয়ংক্রিয়ভাবে আপডেট হয়।",
    "example": "ইভেন্ট ড্রিভেন প্রোগ্রামিং এ Observer Pattern ব্যবহৃত হয়।",
    "category": "Design Patterns",
    "translation": "অবজারভার প্যাটার্ন",
    "isFavorite": false
  },
  {
    "id": 95,
    "word": "Factory Pattern",
    "definition": "ফ্যাক্টরি প্যাটার্ন হলো একটি ডিজাইন প্যাটার্ন, যা অবজেক্ট তৈরি করার প্রক্রিয়াটিকে একটি ইন্টারফেসের মাধ্যমে নিয়ন্ত্রণ করে, ফলে নতুন অবজেক্ট তৈরি করার সময় কোডের জটিলতা হ্রাস পায়।",
    "example": "অবজেক্ট তৈরির জন্য Factory Pattern ব্যবহার করা হয়।",
    "category": "Design Patterns",
    "translation": "ফ্যাক্টরি প্যাটার্ন",
    "isFavorite": false
  },
  {
    "id": 96,
    "word": "MVC Pattern",
    "definition": "এমভিসি প্যাটার্ন হলো একটি ডিজাইন প্যাটার্ন, যা একটি অ্যাপ্লিকেশনকে মডেল, ভিউ এবং কন্ট্রোলার ভাগে বিভক্ত করে, ফলে ইউজার ইন্টারফেস ও ডেটা লজিকের মধ্যে স্পষ্ট বিভাজন ঘটে।",
    "example": "ASP.NET MVC একটি উদাহরণ হিসেবে ব্যবহৃত হয়।",
    "category": "Design Patterns",
    "translation": "এমভিসি প্যাটার্ন",
    "isFavorite": false
  },
  {
    "id": 97,
    "word": "RESTful API",
    "definition": "রেস্টফুল এপিআই হলো এমন একটি API ডিজাইন পদ্ধতি, যা REST আর্কিটেকচার মেনে ক্লায়েন্ট-সার্ভার যোগাযোগকে সহজ, স্কেলেবিল এবং নিরাপদ করে।",
    "example": "রেস্টফুল এপিআই দিয়ে ক্লায়েন্ট সার্ভার যোগাযোগ করা হয়।",
    "category": "Web Services",
    "translation": "রেস্টফুল এপিআই",
    "isFavorite": false
  },
  {
    "id": 98,
    "word": "WebSocket",
    "definition": "ওয়েবসকেট হলো একটি প্রোটোকল, যা ওয়েবসাইট ও সার্ভারের মধ্যে রিয়েল-টাইম দ্বিমুখী যোগাযোগের সুযোগ সৃষ্টি করে, ফলে চ্যাট অ্যাপ বা লাইভ ডেটা স্ট্রিমিং সহজ হয়।",
    "example": "চ্যাট অ্যাপ্লিকেশনে WebSocket ব্যবহার করে বার্তালাপ রিয়েল-টাইমে করা হয়।",
    "category": "Networking",
    "translation": "ওয়েবসকেট",
    "isFavorite": false
  },
  {
    "id": 99,
    "word": "State Management",
    "definition": "স্টেট ম্যানেজমেন্ট হলো অ্যাপ্লিকেশনের ডেটা ও ইউজার ইন্টারফেসের বর্তমান অবস্থা নিয়ন্ত্রণ ও সংগঠিত করার প্রক্রিয়া, যা অ্যাপের সঠিক এবং প্রতিক্রিয়াশীল কাজ নিশ্চিত করে।",
    "example": "Redux বা MobX ব্যবহার করে React অ্যাপের স্টেট ম্যানেজমেন্ট করা হয়।",
    "category": "Web Development",
    "translation": "স্টেট ম্যানেজমেন্ট",
    "isFavorite": false
  },
  {
    "id": 100,
    "word": "Scalability",
    "definition": "স্কেলেবিলিটি হলো এমন একটি সিস্টেমের ক্ষমতা, যা বাড়তি ব্যবহারকারী, ডেটা বা লোড সামলাতে সক্ষম হয়। এটি একটি সিস্টেমকে ভবিষ্যতের উন্নয়নের জন্য প্রস্তুত করে এবং দীর্ঘমেয়াদে কার্যক্ষমতা বজায় রাখতে সহায়ক।",
    "example": "ক্লাউড সল্যুশন ব্যবহার করে একটি সিস্টেমের scalability নিশ্চিত করা যায়।",
    "category": "System Design",
    "translation": "স্কেলেবিলিটি",
    "isFavorite": false
  }
  ]
}

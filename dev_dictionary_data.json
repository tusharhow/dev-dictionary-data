{
  "words": [
    {
      "id": 1,
      "word": "Algorithm",
      "definition": "কম্পিউটার বিজ্ঞানে সমস্যা সমাধানের জন্য সুসংগঠিত পদ্ধতি। ধারাবাহিক গাণিতিক ও যৌক্তিক ধাপে বিভক্ত প্রণালী যা ইনপুট গ্রহণ করে নির্দিষ্ট নিয়মে প্রক্রিয়াকরণের মাধ্যমে কাঙ্ক্ষিত আউটপুট প্রদান করে। সর্টিং, সার্চিং বা ডেটা স্ট্রাকচার ম্যানিপুলেশনের ভিত্তি হিসেবে কাজ করে।",
      "example": "সর্টিং অ্যালগরিদম ব্যবহার করে ডেটা সাজানো",
      "category": "Programming Basics",
      "translation": "অ্যালগরিদম"
    },
    {
      "id": 2,
      "word": "API",
      "definition": "সফটওয়্যার কম্পোনেন্টগুলির মধ্যে যোগাযোগ ও ডেটা বিনিময়ের প্রোটোকল। রিকুয়েস্ট-রেসপন্স ভিত্তিক আর্কিটেকচারে কাজ করে, যেখানে ক্লায়েন্ট সার্ভারকে নির্দিষ্ট ফরম্যাটে অনুরোধ পাঠায় এবং JSON/XML ফরম্যাটে প্রত্যুত্তর পায়। REST API ও SOAP এপিআই ডিজাইনের জনপ্রিয় প্যাটার্ন।",
      "example": "ওয়েদার API ব্যবহার করে আবহাওয়ার ডেটা পাওয়া",
      "category": "Web Development",
      "translation": "এপিআই"
    },
    {
      "id": 3,
      "word": "Debugging",
      "definition": "সফটওয়্যার ডেভেলপমেন্ট লাইফ সাইকেলের অপরিহার্য পর্যায় যেখানে প্রোগ্রামের যৌক্তিক ত্রুটি (বাগ) সনাক্তকরণ ও সংশোধন করা হয়। ব্রেকপয়েন্ট সেট করা, স্টেপ-থ্রু এক্সিকিউশন এবং লগ বিশ্লেষণের মাধ্যমে ডেভেলপাররা কোডের অপ্রত্যাশিত আচরণ নির্ণয় করেন।",
      "example": "ক্র্যাশ লগ বিশ্লেষণ করে বাগ ফিক্স করা",
      "category": "Development Practice",
      "translation": "ডিবাগিং"
    },
    {
      "id": 4,
      "word": "Framework",
      "definition": "পূর্বনির্ধারিত কোড বেস ও আর্কিটেকচারাল প্যাটার্ন সরবরাহকারী সফটওয়্যার প্ল্যাটফর্ম। ডেভেলপারদের জন্য কম্পোনেন্ট রিইউজ, ডিপেন্ডেন্সি ম্যানেজমেন্ট এবং স্ট্যান্ডার্ডাইজড ডেভেলপমেন্ট প্রক্রিয়া সহজতর করে। উদাহরণস্বরূপ: ওয়েব ডেভেলপমেন্টের জন্য Angular, ব্যাকএন্ডের জন্য Spring Boot।",
      "example": "Android অ্যাপ ডেভেলপমেন্টের জন্য Flutter ফ্রেমওয়ার্ক ব্যবহার",
      "category": "Software Architecture",
      "translation": "ফ্রেমওয়ার্ক"
    },
    {
      "id": 5,
      "word": "Git",
      "definition": "ডিস্ট্রিবিউটেড ভার্সন কন্ট্রোল সিস্টেম যা সোর্স কোডের ইতিহাস সংরক্ষণ ও ম্যানেজমেন্টে ব্যবহৃত হয়। কমিট, ব্রাঞ্চিং, মার্জিং এবং কনফ্লিক্ট রেজোলিউশনের মাধ্যমে টিমভিত্তিক ডেভেলপমেন্টে সমন্বয় সাধন করে। GitHub, GitLab এর মতো প্ল্যাটফর্মের মাধ্যমে ক্লাউড-বেসড রিপোজিটরি ম্যানেজমেন্ট সুবিধা প্রদান করে।",
      "example": "git commit -m 'নতুন ফিচার অ্যাড করা হয়েছে'",
      "category": "Development Tools",
      "translation": "গিট"
    },
    {
      "id": 6,
      "word": "Loop",
      "definition": "প্রোগ্রামিং কনস্ট্রাক্ট যা নির্দিষ্ট শর্ত পূরণ না হওয়া পর্যন্ত কোড ব্লকের পুনরাবৃত্তি নিশ্চিত করে। For লুপ (নির্দিষ্ট পুনরাবৃত্তি সংখ্যা), While লুপ (কন্ডিশন-ভিত্তিক) এবং Do-While লুপ (অন্তত একবার এক্সিকিউশন নিশ্চিতকারী) - এই তিনটি প্রধান ধরনের লুপ প্রোগ্রামিং ভাষাগুলোতে ব্যাপকভাবে ব্যবহৃত হয়।",
      "example": "for লুপ ব্যবহার করে অ্যারে এলিমেন্ট প্রসেসিং",
      "category": "Programming Basics",
      "translation": "লুপ"
    },
    {
      "id": 7,
      "word": "Variable",
      "definition": "প্রোগ্রামিং ভাষায় ডেটা সংরক্ষণের জন্য নাম ডিফাইন করা মেমোরি লোকেশন। টাইপ সেফটি নিশ্চিত করতে স্ট্রংলি টাইপড ভাষায় (Java, C++) ভেরিয়েবল ডিক্লেয়ারেশনে ডেটা টাইপ উল্লেখ বাধ্যতামূলক, অন্যদিকে ডাইনামিক টাইপিং ভাষায় (Python, JavaScript) রানটাইমে স্বয়ংক্রিয়ভাবে টাইপ নির্ধারিত হয়। স্কোপ (গ্লোবাল/লোকাল) অনুযায়ী এর প্রাণকাল নির্ধারিত হয়।",
      "example": "String username = \"JohnDoe\";",
      "category": "Programming Basics",
      "translation": "ভেরিয়েবল"
    },
    {
      "id": 8,
      "word": "Function",
      "definition": "একটি নির্দিষ্ট কাজের জন্য কোড ব্লক যা প্যারামিটার গ্রহণ করে নির্দিষ্ট অপারেশন সম্পাদনান্তে ফলাফর প্রদান করতে পারে। মডুলার প্রোগ্রামিং এর মূল ভিত্তি হিসেবে কোডের পুনর্ব্যবহারযোগ্যতা ও রিডেবিলিটি বৃদ্ধি করে। Pure ফাংশন (সাইড ইফেক্টবিহীন) এবং Higher-Order ফাংশন (অন্যান্য ফাংশনকে আর্গুমেন্ট/রিটার্ন ভ্যালু হিসেবে গ্রহণকারী) আধুনিক প্রোগ্রামিং এর গুরুত্বপূর্ণ ধারণা।",
      "example": "calculateAge(int birthYear) { return 2024 - birthYear; }",
      "category": "Programming Basics",
      "translation": "ফাংশন"
    },
    {
      "id": 9,
      "word": "Object",
      "definition": "অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং (OOP) এর মৌলিক বিল্ডিং ব্লক। ক্লাস টেমপ্লেট থেকে তৈরি ইনস্ট্যান্স যার মধ্যে ডেটা ফিল্লেট (প্রপার্টি) এবং মেথড (বিহেভিয়ার) এনক্যাপসুলেশন পদ্ধতিতে সংযুক্ত থাকে। ইনহেরিট্যান্স, পলিমরফিজম এবং অ্যাবস্ট্রাকশনের মাধ্যমে কম্প্লেক্স সিস্টেম ডিজাইনে সহায়তা করে।",
      "example": "Car myCar = new Car(\"Toyota\");",
      "category": "OOP Concepts",
      "translation": "অবজেক্ট"
    },
    {
      "id": 10,
      "word": "Database",
      "definition": "ডিজিটাল ডেটা স্টোরেজ ও ম্যানেজমেন্ট সিস্টেম যেখানে তথ্য টেবুলার ফরম্যাট (রিলেশনাল ডিবি), ডকুমেন্ট-ওরিয়েন্টেড (NoSQL) বা গ্রাফ-ভিত্তিক স্ট্রাকচারে সংরক্ষিত হয়। ACID (Atomicity, Consistency, Isolation, Durability) প্রপার্টি নিশ্চিত করে ডেটা ইন্টিগ্রিটি বজায় রাখে। MySQL, MongoDB, Oracle জনপ্রিয় ডেটাবেস ম্যানেজমেন্ট সিস্টেম।",
      "example": "CREATE TABLE Users (id INT PRIMARY KEY, name VARCHAR(50));",
      "category": "Backend Development",
      "translation": "ডেটাবেস"
    },
    {
      "id": 11,
      "word": "HTTP",
      "definition": "ওয়েব কমিউনিকেশনের ভিত্তি হিসেবে কাজ করা অ্যাপ্লিকেশন লেয়ার প্রোটোকল। ক্লায়েন্ট-সার্ভার আর্কিটেকচারে GET, POST, PUT, DELETE মেথডের মাধ্যমে রিসোর্স এক্সচেঞ্জ করে। স্ট্যাটাস কোড (200 OK, 404 Not Found) দ্বারা অপারেশনের ফলাফল জানায়। HTTPS এর নিরাপদ সংস্করণে SSL/TLS এনক্রিপশন ব্যবহার করে ডেটা ট্রান্সফার সুরক্ষিত করে।",
      "example": "GET /api/users HTTP/1.1",
      "category": "Web Development",
      "translation": "এইচটিটিপি"
    },
    {
      "id": 12,
      "word": "Repository",
      "definition": "ভার্সন কন্ট্রোল সিস্টেমে কোড হিস্ট্রি ট্র্যাকিং ও কলাবরেশনের জন্য ব্যবহৃত কেন্দ্রীয় স্টোরেজ। Git রিপোজিটরিতে কমিট হিস্ট্রি, ব্রাঞ্চিং লজিক এবং ট্যাগিং ব্যবস্থা থাকে। রিমোট রিপোজিটরি (GitHub, Bitbucket) এবং লোকাল রিপোজিটরির মধ্যে সিঙ্ক্রোনাইজেশনের মাধ্যমে টিম মেম্বাররা সমন্বিতভাবে কাজ করে।",
      "example": "GitHub রিপোজিটরি ক্লোন করা: git clone https://github.com/user/repo.git",
      "category": "Development Tools",
      "translation": "রিপোজিটরি"
    },
    {
      "id": 13,
      "word": "Encryption",
      "definition": "গাণিতিক অ্যালগরিদম ব্যবহার করে প্লেইন টেক্সটকে সাইফার টেক্সটে রূপান্তরের প্রক্রিয়া। সিমেট্রিক এনক্রিপশনে (AES) একই কী ব্যবহার করা হয়, অ্যাসিমেট্রিক এনক্রিপশনে (RSA) পাবলিক/প্রাইভেট কী জোড় ব্যবহৃত হয়। SSL সার্টিফিকেট ও ডিজিটাল সিগনেচারের মাধ্যমে ডেটা অথেন্টিসিটি নিশ্চিত করে।",
      "example": "AES-256 এনক্রিপশন ব্যবহার করে ব্যবহারকারীর পাসওয়ার্ড সুরক্ষা",
      "category": "Security",
      "translation": "এনক্রিপশন"
    },
    {
      "id": 14,
      "word": "Unit Testing",
      "definition": "সফটওয়্যার মডিউলগুলির স্বাধীনভাবে কার্যকারিতা যাচাইয়ের পদ্ধতি। টেস্ট কেস ডিজাইন, মক অবজেক্ট তৈরি এবং অ্যাসার্ট স্টেটমেন্টের মাধ্যমে প্রত্যাশিত আউটপুট ভ্যালিডেশন করা হয়। JUnit, NUnit এর মতো ফ্রেমওয়ার্কে অটোমেশন সুবিধা ডেভেলপমেন্ট লাইফসাইকেলের গতি বৃদ্ধি করে।",
      "example": "JUnit ব্যবহার করে Java ক্লাসের মেথড টেস্ট করা",
      "category": "Testing",
      "translation": "ইউনিট টেস্টিং"
    },
    {
      "id": 15,
      "word": "API Gateway",
      "definition": "মাইক্রোসার্ভিস ভিত্তিক সিস্টেমে সমস্ত ক্লায়েন্ট রিকুয়েস্টের সিঙ্গেল পয়েন্ট অফ এন্ট্রি। রাউটিং নিয়ম, রেট লিমিটিং, API ক্যাচিং এবং মেট্রিক্স মনিটরিংয়ের সুবিধা প্রদান করে। AWS API Gateway, Kong এর মতো টুলসে JWT ভ্যালিডেশন ও ট্রাফিক ম্যানেজমেন্টের অ্যাডভান্সড ফিচার রয়েছে।",
      "example": "Amazon API Gateway ব্যবহার করে REST API ম্যানেজমেন্ট",
      "category": "Cloud Computing",
      "translation": "এপিআই গেটওয়ে"
    },
    {
      "id": 16,
      "word": "Middleware",
      "definition": "অ্যাপ্লিকেশন ও অপারেটিং সিস্টেমের মধ্যে মধ্যস্থতাকারী সফটওয়্যার লেয়ার। রিকুয়েস্ট পাইপলাইন প্রসেসিং, অথেন্টিকেশন চেক এবং ডেটা ট্রান্সফরমেশন হ্যান্ডেল করে। Express.js-এর রাউটার মিডলওয়্যার বা ASP.NET Core-এর রিকুয়েস্ট মিডলওয়্যার চেইন典型例として挙げられる。",
      "example": "Express.js মিডলওয়্যার ব্যবহার করে HTTP রিকুয়েস্ট লগিং",
      "category": "Backend Development",
      "translation": "মিডলওয়্যার"
    },
    {
      "id": 17,
      "word": "Compiler",
      "definition": "উচ্চস্তরের প্রোগ্রামিং ভাষাকে মেশিন-রিডেবল বাইনারিতে রূপান্তরের সরঞ্জাম। লেক্সিক্যাল অ্যানালাইসিস, সিনট্যাক্স পার্সিং এবং কোড অপ্টিমাইজেশনের ধাপসমূহ অতিক্রম করে। JIT (Just-In-Time) কম্পাইলার রানটাইমে ইন্টারপ্রেটেড ভাষার পারফরম্যান্স উন্নত করে। GCC, Clang, Roslyn等 জনপ্রিয় কম্পাইলার।",
      "example": "GCC কম্পাইলার ব্যবহার করে C প্রোগ্রাম কম্পাইল করা",
      "category": "Programming Basics",
      "translation": "কম্পাইলার"
    },
    {
      "id": 18,
      "word": "Firewall",
      "definition": "নেটওয়ার্ক সিকিউরিটি ব্যবস্থাপনার জন্য প্যাকেট ফিল্টারিং প্রযুক্তি। স্টেটফুল ইনস্পেকশনের মাধ্যমে অনুমোদিত কানেকশন ট্র্যাক করে। অ্যাপ্লিকেশন লেয়ার ফায়ারওয়াল SQL ইনজেকশন, XSS আক্রমণ প্রতিরোধে সক্ষম। Windows Defender Firewall বা iptables এর মতো টুলসে অ্যাডভান্সড ট্রাফিক কন্ট্রোল সুবিধা।",
      "example": "পোর্ট 22 ব্লক করতে ফায়ারওয়াল কনফিগারেশন",
      "category": "Security",
      "translation": "ফায়ারওয়াল"
    },
    {
      "id": 19,
      "word": "Neural Network",
      "definition": "বায়োলজিক্যাল নিউরনের আদলে ডিজাইন করা কৃত্রিম বুদ্ধিমত্তা মডেল। ইনপুট লেয়ার, হিডেন লেয়ার এবং আউটপুট লেয়ারের সমন্বয়ে গ্রেডিয়েন্ট ডিসেন্ট অ্যালগরিদমের মাধ্যমে প্যারামিটার অপ্টিমাইজেশন করে। কনভোলিউশনাল নিউরাল নেটওয়ার্ক (CNN) ইমেজ প্রসেসিং এবং RNN ন্যাচারাল ল্যাঙ্গুয়েজ প্রসেসিংয়ে ব্যবহৃত।",
      "example": "TensorFlow ব্যবহার করে ইমেজ রিকগনিশন নিউরাল নেটওয়ার্ক",
      "category": "Machine Learning",
      "translation": "নিউরাল নেটওয়ার্ক"
    },
    {
      "id": 20,
      "word": "Blockchain",
      "definition": "ডিসেন্ট্রালাইজ্ড ডিস্ট্রিবিউটেড লেজার টেকনোলজি। ক্রিপ্টোগ্রাফিক হ্যাশ ফাংশন ও কনসেনসাস অ্যালগরিদম (Proof of Work/Stake) এর মাধ্যমে ব্লক ভ্যালিডেশন করা হয়। স্মার্ট কন্ট্র্যাক্ট ব্যবহার করে Ethereum প্ল্যাটফর্মে ট্রাস্টলেস ট্রানজেকশন সম্ভব। সাপ্লাই চেইন ম্যানেজমেন্ট ও ডিজিটাল আইডেন্টিটি ভেরিফিকেশনে প্রয়োগ।",
      "example": "বিটকয়েন ট্রানজেকশন ভেরিফিকেশনে ব্লকচেইন প্রয়োগ",
      "category": "Emerging Tech",
      "translation": "ব্লকচেইন"
    },
    {
      "id": 21,
      "word": "IoT",
      "definition": "ইন্টারনেট অফ থিংস, ফিজিক্যাল ডিভাইসগুলির নেটওয়ার্ক কানেক্টিভিটি। সেন্সর এবং এমবেডেড সিস্টেমের সমন্বয়ে MQTT প্রোটোকলের মাধ্যমে রিয়েল-টাইম ডেটা এক্সচেঞ্জ। স্মার্ট সিটি, হেলথকেয়ার মনিটরিং এবং ইন্ডাস্ট্রিয়াল অটোমেশনে এর প্রয়োগ। সিকিউরিটি চ্যালেঞ্জ মোকাবেলায় TLS এনক্রিপশন ও ডিভাইস অথেন্টিকেশন আবশ্যক।",
      "example": "স্মার্ট হোমে তাপমাত্রা নিয়ন্ত্রণে IoT ডিভাইস",
      "category": "Embedded Systems",
      "translation": "আইওটি"
    },
    {
      "id": 22,
      "word": "Android Studio",
      "definition": "গুগলের অফিসিয়াল Android অ্যাপ ডেভেলপমেন্ট IDE। গ্রেডল বিল্ড সিস্টেম, এমুলেটরে মাল্টি-ডিভাইস টেস্টিং এবং XML ভিজুয়াল লেআউট এডিটরের সমন্বয়। Kotlin/Java ভাষার জন্য ইন্টেলিসেন্স কোড কমপ্লিশন, Firebase ইন্টিগ্রেশন এবং APK অ্যানালাইসিস টুলস সমৃদ্ধ। ডিবাগারে রিয়েল-টাইম ভেরিয়েবল মনিটরিং সুবিধা।",
      "example": "XML ব্যবহার করে UI লেআউট ডিজাইন করা",
      "category": "Mobile Development",
      "translation": "অ্যান্ড্রয়েড স্টুডিও"
    },
    {
      "id": 23,
      "word": "Xcode",
      "definition": "Apple এর ইউনিফাইড ডেভেলপমেন্ট এনভায়রনমেন্ট (macOS/iOS/watchOS)। SwiftUI এর ডিক্লারেটিভ সিনট্যাক্সে UI ডিজাইন, Interface Builder এ স্টোরিবোর্ড ম্যানিপুলেশন। Instruments টুলের মাধ্যমে মেমোরি লিক ডিটেকশন ও পারফরম্যান্স প্রোফাইলিং। TestFlight এর মাধ্যমে বেটা টেস্টিং ও App Store কানেক্টিভিটি।",
      "example": "SwiftUI ব্যবহার করে iOS অ্যাপের ইন্টারফেস তৈরি",
      "category": "Mobile Development",
      "translation": "এক্সকোড"
    },
    {
      "id": 24,
      "word": "CI/CD",
      "definition": "ক্রমাগত ইন্টিগ্রেশন (Continuous Integration) এবং ক্রমাগত ডেলিভারি (Continuous Delivery) এর সমন্বিত পাইপলাইন। Jenkins, Travis CI বা GitHub Actions এর মাধ্যমে স্বয়ংক্রিয় ইউনিট টেস্টিং, কোড কোয়ালিটি চেক ও কন্টেইনারাইজড ডেপ্লয়মেন্ট। Blue-Green ডেপ্লয়মেন্ট স্ট্র্যাটেজি ব্যবহার করে জিরো-ডাউনটাইম আপডেট।",
      "example": "GitHub Actions ব্যবহার করে স্বয়ংক্রিয় ডেপ্লয়মেন্ট",
      "category": "DevOps",
      "translation": "সিআই/সিডি"
    },
    {
      "id": 25,
      "word": "JWT",
      "definition": "JSON ওয়েব টোকেন (RFC 7519 স্ট্যান্ডার্ড) ভিত্তিক অথেন্টিকেশন মেকানিজম। হেডার-পে-লোড-সিগনেচার স্ট্রাকচারে বিভক্ত Base64Url এনকোডেড টোকেন। HMAC SHA256 বা RSA অ্যালগরিদমে ডিজিটালি সাইনড। অ্যাক্সেস টোকেন ও ID টোকেন হিসেবে OAuth 2.0 প্রোটোকলে ব্যবহৃত।",
      "example": "Node.js-এ JWT টোকেন ভেরিফিকেশন",
      "category": "Security",
      "translation": "জেএডব্লিউটি"
    },
    {
      "id": 26,
      "word": "ARCore",
      "definition": "গুগলের অগমেন্টেড রিয়েলিটি ডেভেলপমেন্ট প্ল্যাটফর্ম। মোশন ট্র্যাকিং, এনভায়রনমেন্টাল আন্ডারস্ট্যান্ডিং এবং লাইট এস্টিমেশন API এর সমন্বয়। Sceneform SDK ব্যবহার করে 3D অবজেক্ট রেন্ডারিং ও Anchors এর মাধ্যমে ভার্চুয়াল-রিয়েলিটি ইন্টার্যাকশন। গেমিং, এডুকেশনাল সিমুলেশনে বিপ্লবকারী প্রযুক্তি।",
      "example": "Android-এ ARCore ব্যবহার করে অগমেন্টেড রিয়েলিটি অ্যাপ",
      "category": "AR/VR",
      "translation": "এআরকোর"
    },
    {
      "id": 27,
      "word": "Blockchain",
      "definition": "ডিসেন্ট্রালাইজ্ড ডিস্ট্রিবিউটেড লেজার টেকনোলজি। ক্রিপ্টোগ্রাফিক হ্যাশ ফাংশন ও কনসেনসাস অ্যালগরিদম (Proof of Work/Stake) এর মাধ্যমে ব্লক ভ্যালিডেশন করা হয়। স্মার্ট কন্ট্র্যাক্ট ব্যবহার করে Ethereum প্ল্যাটফর্মে ট্রাস্টলেস ট্রানজেকশন সম্ভব। সাপ্লাই চেইন ম্যানেজমেন্ট ও ডিজিটাল আইডেন্টিটি ভেরিফিকেশনে প্রয়োগ।",
      "example": "বিটকয়েন ট্রানজেকশন ভেরিফিকেশনে ব্লকচেইন প্রয়োগ",
      "category": "Emerging Tech",
      "translation": "ব্লকচেইন"
    },
    {
      "id": 28,
      "word": "Context",
      "definition": "অ্যান্ড্রয়েড সিস্টেম রিসোর্স ও কম্পোনেন্ট অ্যাক্সেসের গেটওয়ে (Activity, Service, Application ক্লাসের বেস ক্লাস)। রিসোর্স লোডিং (getResources()), সিস্টেম সার্ভিস অ্যাক্সেস (getSystemService()), এবং নতুন কম্পোনেন্ট স্টার্ট করার ক্ষমতা (startActivity()) প্রদান করে। ContextThemeWrapper এর মাধ্যমে থিম-অ্যাওয়্যার অ্যাক্টিভিটি কন্টেক্সট। লং-লিভড রেফারেন্সে Memory Leak এড়াতে Application Context ব্যবহারের Best Practice।",
      "example": "Context context = getApplicationContext();\nToast.makeText(context, \"মেসেজ\", Toast.LENGTH_SHORT).show();\nIntent intent = new Intent(context, TargetActivity.class);\ncontext.startActivity(intent);",
      "category": "Android Development",
      "translation": "কন্টেক্সট"
    },
    {
      "id": 29,
      "word": "HTTPS",
      "definition": "হাইপারটেক্সট ট্রান্সফার প্রোটোকল সিকিউয়ার...",
      "example": "https://example.com এ SSL সার্টিফিকেট যুক্ত ওয়েবসাইট",
      "category": "Web Security",
      "translation": "এইচটিটিপিএস"
    },
    {
      "id": 30,
      "word": "Kotlin",
      "definition": "জেটব্রেইন্সের মডার্ন, কনসাইজ প্রোগ্রামিং ভাষা...",
      "example": "val message: String? = null (নাল সেফটি উদাহরণ)",
      "category": "Programming Languages",
      "translation": "কটলিন"
    },
    {
      "id": 31,
      "word": "Flutter",
      "definition": "গুগলের UI টুলকিট ফর ক্রস-প্ল্যাটফর্ম...",
      "example": "ListView.builder ব্যবহার করে ডায়নামিক লিস্ট তৈরি",
      "category": "Mobile Development",
      "translation": "ফ্লাটার"
    },
    {
      "id": 32,
      "word": "Dart",
      "definition": "গুগলের অবজেক্ট-ওরিয়েন্টেড, ক্লিন সিনট্যাক্স ভাষা (Flutter-এর মূল ভাষা)। JIT (জাস্ট-ইন-টাইম) ও AOT (এহেড-অফ-টাইম) কম্পাইলেশন। StreamController ও async/await এর মাধ্যমে রিয়েকটিভ প্রোগ্রামিং। Mixins এবং Extension Methods দ্বারা কোড রিইউজেবিলিটি।"
    },
    {
      "id": 33,
      "word": "PHP",
      "definition": "সার্ভার-সাইড স্ক্রিপ্টিং ভাষা (Hypertext Preprocessor)। ডায়নামিক ওয়েব কন্টেন্ট জেনারেশনে ব্যবহৃত। MySQL ডাটাবেসের সাথে LAMP (Linux, Apache, MySQL, PHP) স্ট্যাক। $_GET/$_POST সুপারগ্লোবাল ভেরিয়েবলের মাধ্যমে ফর্ম ডেটা প্রসেসিং। কম্পোজার এর মাধ্যমে ডিপেন্ডেন্সি ম্যানেজমেন্ট।"
    },
    {
      "id": 34,
      "word": "Laravel",
      "definition": "PHP ভিত্তিক এলিগেন্ট ওয়েব ফ্রেমওয়ার্ক। MVC আর্কিটেকচার, Eloquent ORM এবং ব্লেড টেমপ্লেট ইঞ্জিন। আর্টিসান CLI টুলের মাধ্যমে মাইগ্রেশন, সিডিং। রাউটিং (web.php), মিডলওয়্যার ও Gates এর মাধ্যমে অথেন্টিকেশন। ভেপার হোমস্টেডে লোকাল ডেভেলপমেন্ট এনভায়রনমেন্ট।"
    },
    {
      "id": 35,
      "word": "File",
      "definition": "ডিজিটাল ইনফরমেশন স্টোরেজের ইউনিট (টেক্সট/বাইনারি ফরম্যাট)। এক্সটেনশন (.txt, .jpg) দ্বারা টাইপ আইডেন্টিফিকেশন। FileInputStream/FileOutputStream (Java) বা fopen() (C) এর মাধ্যমে এক্সেস। পারমিশন সিস্টেম (read/write/execute) দ্বারা সিকিউরিটি মেইনটেইন।"
    },
    {
      "id": 36,
      "word": "Folder",
      "definition": "ফাইল অর্গানাইজেশনের লজিক্যাল কন্টেইনার (ডিরেক্টরি ট্রি স্ট্রাকচার)। পাথ সেপারেটর (Windows: \\, Unix: /) ব্যবহার। Git-এ .git ফোল্ডার ভার্সন কন্ট্রোল মেটাডেটা সংরক্ষণ। Android-এ res ফোল্ডারে লেআউট, ড্রয়েবল রিসোর্স।"
    },
    {
      "id": 37,
      "word": "AdMob",
      "definition": "গুগলের মোবাইল অ্যাপ এডভারটাইজিং প্ল্যাটফর্ম...",
      "example": "InterstitialAd.load() ব্যবহার করে ফুল-স্ক্রিন অ্যাড প্রদর্শন",
      "category": "Monetization",
      "translation": "অ্যাডমব"
    },
    {
      "id": 38,
      "word": "Emulator",
      "definition": "হার্ডওয়্যার/সফটওয়্যার সিস্টেমের ভার্চুয়াল রেপ্লিকা (যেমন: Android Emulator ARM/Intel আর্কিটেকচার সিমুলেশন)। HAXM এক্সিলারেশন ব্যবহার করে পারফরম্যান্স অপ্টিমাইজেশন। GPS লোকেশন মকিং এবং নেটওয়ার্ক লেটেন্সি সিমুলেশনের সুবিধা।",
      "example": "Android Studio-তে Pixel 6 প্রো ইমুলেটরে অ্যাপ টেস্টিং",
      "category": "Development Tools",
      "translation": "এমুলেটর"
    },
    {
      "id": 39,
      "word": "Simulator",
      "definition": "সফটওয়্যার-ভিত্তিক এনভায়রনমেন্ট সিমুলেশন (যেমন: iOS Simulator)। রিয়েল ডিভাইসের OS ভার্শন ও স্ক্রিন রেজোলিউশন টেস্টিং। Xcode-এর সাথে ইন্টিগ্রেটেড GPU গ্রাফিক্স রেন্ডারিং। রিয়েল সেন্সর ডেটা (জাইরোস্কোপ) এর অভাব।",
      "example": "Xcode সিমুলেটরে iPadOS 17 টেস্টিং",
      "category": "Mobile Development",
      "translation": "সিমুলেটর"
    },
    {
      "id": 40,
      "word": "Compile",
      "definition": "সোর্স কোডকে মেশিন-রিডেবল বাইনারিতে রূপান্তর (C/C++ → .exe)। লেক্সিং, পার্সিং, সিম্যান্টিক অ্যানালাইসিসের ধাপসমূহ। JIT কম্পাইলার রানটাইমে ইন্টারপ্রেটেড ভাষার পারফরম্যান্স উন্নত করে। Makefile বা CMake ব্যবহার করে বিল্ড অটোমেশন।",
      "example": "gcc -o program program.c",
      "category": "Programming Basics",
      "translation": "কম্পাইল"
    },
    {
      "id": 41,
      "word": "SHA1",
      "definition": "160-বিট ক্রিপ্টোগ্রাফিক হ্যাশ ফাংশন (RFC 3174)। ফাইল ইন্টিগ্রিটি চেক ও Git কমিট আইডেন্টিফায়ারে ব্যবহৃত। কলিশন অ্যাটাক প্রবণতার কারণে বর্তমানে ডিপ্রিকেটেড। Certificate Signing Request (CSR) জেনারেশনে SHA-256 দ্বারা প্রতিস্থাপিত।",
      "example": "keytool -v -alias mykey -keystore my.keystore",
      "category": "Security",
      "translation": "এসএইচএ১"
    },
    {
      "id": 42,
      "word": "SHA256",
      "definition": "256-বিট সিকিউর হ্যাশ অ্যালগরিদম (SHA-2 ফ্যামিলি)। ব্লকচেইন ট্রানজেকশন ভেরিফিকেশন ও SSL সার্টিফিকেটে স্ট্যান্ডার্ড। HMAC-SHA256 এর মাধ্যমে API রিকুয়েস্ট অথেন্টিকেশন।",
      "example": "MessageDigest.getInstance(\"SHA-256\") (Java)",
      "category": "Cryptography",
      "translation": "এসএইচএ২৫৬"
    },
    {
      "id": 43,
      "word": "Key",
      "definition": "ক্রিপ্টোগ্রাফিতে ডাটা এনক্রিপ্ট/ডিক্রিপ্টের গাণিতিক প্যারামিটার। অ্যাসিমেট্রিক কিঃ-পেয়ার (পাবলিক/প্রাইভেট) জেনারেশন (RSA 2048-bit)। API কিঃ হিসেবে ব্যবহারে রেট লিমিটিং ও OAuth 2.0 স্কোপ ম্যানেজমেন্ট।",
      "example": "ssh-keygen -t rsa -b 4096",
      "category": "Security",
      "translation": "কী"
    },
    {
      "id": 44,
      "word": "Container",
      "definition": "অ্যাপ্লিকেশন ও এর ডিপেন্ডেন্সি প্যাকেজ করার টেকনোলজি (Docker, Kubernetes)। নেমস্পেস ও cgroups এর মাধ্যমে আইসোলেশন। ইমেজ রেজিস্ট্রি (Docker Hub) থেকে পুল/পুশ অপারেশন। Helm চার্ট ব্যবহার করে Kubernetes ডেপ্লয়মেন্ট।",
      "example": "docker run -p 8080:80 nginx",
      "category": "DevOps",
      "translation": "কন্টেইনার"
    },
    {
      "id": 45,
      "word": "Ruby",
      "definition": "ডায়নামিক, ইন্টারপ্রেটেড স্ক্রিপ্টিং ভাষা (Everything is object ফিলোসফি)। Mixins ও মেটাপ্রোগ্রামিং সুবিধা। RVM/rbenv দ্বারা ভার্শন ম্যানেজমেন্ট। Sinatra ফ্রেমওয়ার্কে লাইটওয়েট ওয়েব অ্যাপ ডেভেলপমেন্ট।",
      "example": "5.times { puts 'Hello' }",
      "category": "Programming Languages",
      "translation": "রুবি"
    },
    {
      "id": 46,
      "word": "Go",
      "definition": "গুগলের স্ট্যাটিক্যালি টাইপড, কনকারেন্ট ল্যাঙ্গুয়েজ (Goroutine + Channel)। গার্বেজ কালেকশনবিহীন মেমোরি ম্যানেজমেন্ট। কম্পাইল টাইম ডিপেন্ডেন্সি রেজোলিউশন (go.mod)। নেটিভ HTTP সার্ভার ও টেস্টিং ফ্রেমওয়ার্ক।",
      "example": "go run main.go",
      "category": "Programming Languages",
      "translation": "গো"
    },
    {
      "id": 47,
      "word": "Ruby on Rails",
      "definition": "Ruby ভিত্তিক MVC ওয়েব ফ্রেমওয়ার্ক (Convention over Configuration)। Active Record ORM ও Database Migrations। Turbolinks এর মাধ্যমে সিঙ্গেল-পেজ অ্যাপ ফিচার। RSpec টেস্টিং ও Capistrano ডেপ্লয়মেন্ট টুল।",
      "example": "rails generate scaffold Post title:string",
      "category": "Web Frameworks",
      "translation": "রুবি অন রেইলস"
    },
    {
      "id": 48,
      "word": "JSON",
      "definition": "JavaScript Object Notation ডাটা ইন্টারচেঞ্জ ফরম্যাট (RFC 8259)। Key-Value জোড়া ও নেস্টেড স্ট্রাকচার। JSON Schema দ্বারা ভ্যালিডেশন। Java-তে Jackson/Gson, Python-এ json মডিউল ব্যবহার করে পার্সিং।",
      "example": "{ \"name\": \"John\", \"age\": 30 }",
      "category": "Data Formats",
      "translation": "জেসন"
    },
    {
      "id": 49,
      "word": "Widget Tree",
      "definition": "UI কম্পোনেন্টের হায়ারার্কিক্যাল রিপ্রেজেন্টেশন (Flutter/Jetpack Compose)। প্যারেন্ট-চাইল্ড রিলেশনশিপের মাধ্যমে লেআউট কম্পোজিশন। DevTools-এ Widget Inspector ব্যবহার করে ভিজুয়াল ডিবাগিং। State propagation এবং রিবিল্ড মেকানিজমের মূল ভিত্তি।",
      "example": "Column → Row → Text কম্পোজিশন",
      "category": "UI Development",
      "translation": "উইজেট ট্রি"
    },
    {
      "id": 50,
      "word": "State",
      "definition": "অ্যাপের ডাইনামিক ডাটা যার পরিবর্তনে UI রিফ্রেশ হয়। Stateful vs Stateless উইজেটের পার্থক্য। Jetpack Compose-এ remember { mutableStateOf() } ব্যবহার। ViewModel-এ StateFlow/LiveData এর মাধ্যমে স্টেট ম্যানেজমেন্ট।",
      "example": "var count by remember { mutableStateOf(0) }",
      "category": "Android Architecture",
      "translation": "স্টেট"
    },
    {
      "id": 51,
      "word": "LaunchedEffect",
      "definition": "Jetpack Compose-এর সাইড ইফেক্ট হ্যান্ডলার (কোরুটিন স্কোপ)। ওয়ান-টাইম অপারেশন (API কল) বা কোল্ড স্ট্রিম কলেকশনের জন্য ব্যবহার। key প্যারামিটারের মাধ্যমে রিকম্পোজিশন কন্ট্রোল। DisposableEffect এর সাথে রিসোর্স ক্লিনআপ ম্যানেজমেন্ট।",
      "example": "LaunchedEffect(Unit) { fetchData() }",
      "category": "Jetpack Compose",
      "translation": "লন্চডইফেক্ট"
    },
    {
      "id": 52,
      "word": "Ktor",
      "definition": "Kotlin ভিত্তিক অ্যাসিঙ্ক্রোনাস ওয়েব ফ্রেমওয়ার্ক (ক্লায়েন্ট/সার্ভার)। Coroutine-ভিত্তিক নন-ব্লকিং I/O। Routing DSL এবং Content Negotiation (JSON সিরিয়ালাইজেশন)। JWT অথেন্টিকেশন ও WebSocket সাপোর্ট।",
      "example": "routing { get(\"/api/data\") { ... } }",
      "category": "Backend Development",
      "translation": "কেটর"
    },
    {
      "id": 53,
      "word": "Koin",
      "definition": "Kotlin-ফ্রেন্ডলি ডিপেন্ডেন্সি ইনজেকশন ফ্রেমওয়ার্ক। DSL ব্যবহার করে মডিউল ডিক্লারেশন (single, factory, scope)। ViewModel ইনজেকশন এবং Android কন্টেক্সট ম্যানেজমেন্ট। get() বা inject() ফাংশনের মাধ্যমে ডিপেন্ডেন্সি রিকুয়েস্ট।",
      "example": "val repo: UserRepository by inject()",
      "category": "Dependency Injection",
      "translation": "কোইন"
    },
    {
      "id": 54,
      "word": "Dagger Hilt",
      "definition": "Android-এর জন্য স্ট্যান্ডার্ডাইজড DI লাইব্রেরি (Dagger-এর সিমপ্লিফাইড ভার্শন)। @HiltAndroidApp, @Inject এবং @Module অ্যানোটেশন। Component hierarchy এবং Scoped ডিপেন্ডেন্সি ম্যানেজমেন্ট। Compile-টাইম ভ্যালিডেশন এর মাধ্যমে সেফটি।",
      "example": "@AndroidEntryPoint class MainActivity : AppCompatActivity()",
      "category": "Android Architecture",
      "translation": "ড্যাগার হিল্ট"
    },
    {
      "id": 55,
      "word": "Darwin",
      "definition": "Apple-এর ওপেন-সোর্স ফ্রেমওয়ার্ক (macOS/iOS কোর সার্ভিস)। KMM (Kotlin Multiplatform Mobile) এর সাথে নেটিভ API এক্সেস। Grand Central Dispatch (GCD) এর মাধ্যমে কনকারেন্সি ম্যানেজমেন্ট। Core Data এবং File System ইন্টারঅ্যাকশন।",
      "example": "Darwin notification center ব্যবহার করে ইভেন্ট হ্যান্ডলিং",
      "category": "iOS Development",
      "translation": "ডারউইন"
    },
    {
      "id": 56,
      "word": "Coil",
      "definition": "Kotlin-ফার্স্ট ইমেজ লোডিং লাইব্রেরি (Android, iOS)। Coroutine-ভিত্তিক async লোডিং এবং মেমোরি ক্যাশিং। Transformation API (CircleCrop, Grayscale) এবং placeholder সমর্থন। Jetpack Compose-এর সাথে ImageRequest.Builder ব্যবহার।",
      "example": "AsyncImage(model = \"https://...\", contentDescription = null)",
      "category": "Android Libraries",
      "translation": "কয়েল"
    },
    {
      "id": 57,
      "word": "Jetpack Compose",
      "definition": "Android-এর মডার্ন ডিক্লারেটিভ UI টুলকিট। কম্পোজেবল ফাংশনের মাধ্যমে UI কম্পোজিশন। State hoisting এবং unidirectional ডেটা ফ্লো। Material Design 3 কম্পোনেন্ট এবং Animation API সমর্থন।",
      "example": "@Composable fun Greeting(name: String) { Text(text = \"Hello $name\") }",
      "category": "Android UI",
      "translation": "জেটপ্যাক কম্পোজ"
    },
    {
      "id": 58,
      "word": "KMP",
      "definition": "Kotlin Multiplatform প্রজেক্ট (শেয়ার্ড কোড বেস)। commonMain, androidMain, iosMain সোর্স সেট। expect/actual ডিক্লারেশনের মাধ্যমে প্ল্যাটফর্ম-স্পেসিফিক ইমপ্লিমেন্টেশন। iOS-এর সাথে cocoapods ইন্টিগ্রেশন।",
      "example": "class Greeting { fun greet() = \"Hello from ${Platform().platform}\" }",
      "category": "Cross-Platform",
      "translation": "কেএমপি"
    },
    {
      "id": 59,
      "word": "Stateless Widget",
      "definition": "ইমিউটেবল UI কম্পোনেন্ট (Flutter) যার অভ্যন্তরীণ স্টেট নেই। বিল্ড মেথড একবার কল হয় এবং পারেন্ট উইজেট দ্বারা পুনরায় রি-ইনিশিয়ালাইজ করা প্রয়োজন। const কনস্ট্রাক্টর ব্যবহার করে পারফরম্যান্স অপ্টিমাইজেশন।",
      "example": "Text('Hello World') বা IconButton",
      "category": "Flutter UI",
      "translation": "স্টেটলেস উইজেট"
    },
    {
      "id": 60,
      "word": "Stateful Widget",
      "definition": "মিউটেবল UI কম্পোনেন্ট যার স্টেট অবজেক্ট (State<T>) রয়েছে। setState() কলের মাধ্যমে UI রিবিল্ড ট্রিগার। Lifecycle মেথড (initState, dispose) ব্যবহার করে রিসোর্স ম্যানেজমেন্ট।",
      "example": "Checkbox, Form বা অ্যানিমেটেড উইজেট",
      "category": "Flutter UI",
      "translation": "স্টেটফুল উইজেট"
    },
    {
      "id": 61,
      "word": "Provider",
      "definition": "Flutter-এর সিম্পলেস্ট স্টেট ম্যানেজমেন্ট সলিউশন (InheritedWidget এর র্যাপার)। ChangeNotifier এর সাথে Combine করে ব্যবহৃত। Provider.of<T>() বা context.watch<T>() এর মাধ্যমে ডাটা অ্যাক্সেস।",
      "example": "ChangeNotifierProvider(create: (_) => CounterModel())",
      "category": "State Management",
      "translation": "প্রোভাইডার"
    },
    {
      "id": 62,
      "word": "BLoC",
      "definition": "Business Logic Component আর্কিটেকচার (ইভেন্ট → স্টেট ম্যাপিং)। StreamController ও Sink/Stream ব্যবহার করে ডাটা ফ্লো। BlocProvider ও BlocBuilder এর মাধ্যমে UI ইন্টিগ্রেশন। Freezed প্যাকেজ দিয়ে স্টেট/ইভেন্ট মডেলিং।",
      "example": "class CounterBloc extends Bloc<CounterEvent, int>",
      "category": "State Management",
      "translation": "বিএলসি"
    },
    {
      "id": 63,
      "word": "GetX",
      "definition": "লাইটওয়েট ফ্লাটার লাইব্রেরি (স্টেট+রাউটিং+ডিপেন্ডেন্সি ইনজেকশন)। Obx() অবজারভার ব্যবহার করে রিয়েক্টিভ প্রোগ্রামিং। Get.toNamed() এর মাধ্যমে রাউট ম্যানেজমেন্ট। ইন্টারন্যাশনালাইজেশন ও থিম ম্যানেজমেন্ট সুবিধা।",
      "example": "final count = 0.obs; Obx(() => Text('${count.value}'))",
      "category": "Flutter Libraries",
      "translation": "গেটএক্স"
    },
    {
      "id": 64,
      "word": "Riverpod",
      "definition": "প্রোভাইডারের নেক্সট-জেনারেশন ভার্শন (কম্পাইল-টাইম সেফটি)। ProviderScope দিয়ে রুট লেভেল র্যাপ। StateNotifierProvider ও FutureProvider এর মাধ্যমে অ্যাডভান্সড ইউস কেস। ref.watch() এর মাধ্যমে ডিপেন্ডেন্সি ট্র্যাকিং।",
      "example": "final counterProvider = StateProvider((ref) => 0)",
      "category": "State Management",
      "translation": "রিভারপড"
    },
    {
      "id": 65,
      "word": "JavaScript",
      "definition": "ডায়নামিক টাইপড স্ক্রিপ্টিং ভাষা (ECMAScript স্পেসিফিকেশন)। সিঙ্গেল-থ্রেডেড ইভেন্ট লুপ আর্কিটেকচার। Node.js রানটাইমে সার্ভার-সাইড এক্সিকিউশন। React/Angular/Vue ফ্রেমওয়ার্কে ওয়েব ডেভেলপমেন্ট।",
      "example": "document.getElementById('demo').innerHTML = 'Hello'",
      "category": "Programming Languages",
      "translation": "জাভাস্ক্রিপ্ট"
    },{
      "id": 66,
      "word": "HTML",
      "definition": "হাইপারটেক্সট মার্কআপ ল্যাঙ্গুয়েজ (W3C স্ট্যান্ডার্ড) - ওয়েব পেজ স্ট্রাকচার ডিফাইন করে। ট্যাগ-ভিত্তিক সিনট্যাক্স (<html>, <div>, <span>)। সিম্যান্টিক এলিমেন্ট (header, article, section) দিয়ে SEO অপ্টিমাইজেশন। Attributes (id, class) এবং DOM ট্রি স্ট্রাকচার ম্যানিপুলেশন।",
      "example": "<!DOCTYPE html>\n<html>\n<head>\n  <title>পেজ টাইটেল</title>\n</head>\n<body>\n  <h1>হেডিং</h1>\n</body>\n</html>",
      "category": "Web Development",
      "translation": "এইচটিএমএল"
    },
    {
      "id": 67,
      "word": "CSS",
      "definition": "ক্যাসকেডিং স্টাইল শীট (বক্স মডেল ম্যানেজমেন্ট)। সিলেক্টর (class, ID, pseudo-class) এবং প্রপার্টি (flex, grid, position) ব্যবহার। মিডিয়া কোয়েরি দিয়ে রেস্পন্সিভ ডিজাইন। ট্রানজিশন/অ্যানিমেশন এবং ভেরিয়েবল (CSS Custom Properties) সুবিধা। প্রিপ্রোসেসর (Sass/Less) দিয়ে নেস্টেড স্টাইলিং।",
      "example": ".container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n}",
      "category": "Web Development",
      "translation": "সিএসএস"
    },
    {
      "id": 68,
      "word": "WebKit",
      "definition": "ওপেন-সোর্স ব্রাউজার ইঞ্জিন (Apple-এর নেতৃত্বে)। HTML/CSS রেন্ডারিং এবং JavaScript এক্সিকিউশন হ্যান্ডেল করে। Safari, Mail.app এবং কিছু Linux অ্যাপে ব্যবহার। CSS এক্সটেনশন (-webkit-) দিয়ে এক্সপেরিমেন্টাল ফিচার সাপোর্ট। WKWebView দিয়ে iOS নেটিভ অ্যাপে ওয়েবভিউ ইমপ্লিমেন্টেশন।",
      "example": "@media (-webkit-min-device-pixel-ratio: 2) { ... }",
      "category": "Browser Technology",
      "translation": "ওয়েবকিট"
    },
    {
      "id": 69,
      "word": "Bootstrap",
      "definition": "টুইটার-ডেভেলপড ফ্রন্টএন্ড কম্পোনেন্ট লাইব্রেরি (মোবাইল-ফার্স্ট)। 12-কলাম রেস্পন্সিভ গ্রিড সিস্টেম। প্রি-বিল্ট কম্পোনেন্ট (কার্ড, ন্যাভবার, মোডাল) এবং ইউটিলিটি ক্লাস (spacing, shadows)। JavaScript প্লাগইন (টুলটিপ, পপওভার) এবং থিমিং সাপোর্ট।",
      "example": "<div class=\"row\">\n  <div class=\"col-md-6\">কন্টেন্ট</div>\n</div>",
      "category": "Frontend Frameworks",
      "translation": "বুটস্ট্র্যাপ"
    },
    {
      "id": 70,
      "word": "Lazy Load",
      "definition": "পারফরম্যান্স অপ্টিমাইজেশন টেকনিক (অন-ডিমান্ড রিসোর্স লোডিং)। ইমেজ/ভিডিওর জন্য Intersection Observer API ব্যবহার। ভিউপোর্টে এন্ট্রি হলে লোড ট্রিগার। নেটওয়ার্ক ডেটা সেভিং এবং FCP (First Contentful Paint) উন্নত করে। নেটিভ HTML লোডিং অ্যাট্রিবিউট (loading=\"lazy\")।",
      "example": "<img src=\"placeholder.jpg\" data-src=\"real-image.jpg\" class=\"lazyload\">",
      "category": "Performance Optimization",
      "translation": "লেইজি লোড"
    },
    {
      "id": 71,
      "word": "Mailchimp",
      "definition": "ক্লাউড-ভিত্তিক ইমেইল মার্কেটিং প্ল্যাটফর্ম (অডিয়েন্স ম্যানেজমেন্ট + অটোমেশন)। ড্র্যাগ-অ্যান্ড-ড্রপ ইমেইল বিল্ডার ও ল্যান্ডিং পেজ টেমপ্লেট। ক্যাম্পেইন অ্যানালিটিক্স ও A/B টেস্টিং সুবিধা। API ইন্টিগ্রেশনের মাধ্যমে কাস্টম অটোমেশন ওয়র্কফ্লো।",
      "example": "Mailchimp-এ কন্টাক্ট লিস্ট ইম্পোর্ট ও সেগমেন্টেশন",
      "category": "Marketing Tools",
      "translation": "মেইলচিম্প",
      "isFavorite": false
    },
    {
      "id": 72,
      "word": "Binding",
      "definition": "ভিউ কম্পোনেন্ট ও কোডের মধ্যে ডাইরেক্ট কানেকশন (Android ViewBinding)। লেআউট XML ফাইলের ভিউ রেফারেন্স অটো-জেনারেট ক্লাস। findViewById() এর বিকল্প হিসেবে টাইপ-সেফ অ্যাক্সেস। মেমরি লিক রিস্ক কমাতে Activity/Fragment লাইফসাইকেল অ্যাওয়্যার।",
      "example": "ActivityMainBinding.inflate(layoutInflater)",
      "category": "Android Development",
      "translation": "বাইন্ডিং",
      "isFavorite": true
    },
    {
      "id": 73,
      "word": "Data Binding",
      "definition": "UI কম্পোনেন্ট ও ডাটা সোর্সের অটোমেটিক সিঙ্ক্রোনাইজেশন (Jetpack লাইব্রেরি)। লেআউট XML-এ @{} সিনট্যাক্স ব্যবহার। Observable ফিল্ডস ও LiveData এর সাথে ইন্টিগ্রেশন। Bidirectional বাইন্ডিং এর মাধ্যমে টু-ওয়ে ডাটা ফ্লো।",
      "example": "<TextView android:text=\"@={viewmodel.userName}\"/>",
      "category": "Android Architecture",
      "translation": "ডাটা বাইন্ডিং",
      "isFavorite": true
    },
    {
      "id": 74,
      "word": "Firebase",
      "definition": "Google-এর BaaS (Backend as a Service) প্ল্যাটফর্ম। রিয়েলটাইম ডাটাবেস, অথেন্টিকেশন, Cloud Functions। Crashlytics এর মাধ্যমে ক্র্যাশ রিপোর্টিং। Firestore-এর ডকুমেন্ট-ওরিয়েন্টেড NoSQL ডাটাবেস।",
      "example": "firebase.initializeApp() দিয়ে প্রজেক্ট সেটআপ",
      "category": "Backend Services",
      "translation": "ফায়ারবেস",
      "isFavorite": true
    },
    {
      "id": 75,
      "word": "Supabase",
      "definition": "ওপেন-সোর্স Firebase বিকল্প (PostgreSQL ভিত্তিক)। রিয়েলটাইম ডাটাবেস, Row Level Security। STORAGE API দিয়ে ফাইল ম্যানেজমেন্ট। JWT অথেন্টিকেশন ও SQL-এর পূর্ণ ক্ষমতা।",
      "example": "supabase.from('users').select('*')",
      "category": "Backend Services",
      "translation": "সুপাবেস",
      "isFavorite": false
    },
    {
      "id": 77,
      "word": "WordPress",
      "definition": "ওপেন-সোর্স কন্টেন্ট ম্যানেজমেন্ট সিস্টেম (PHP+MySQL ভিত্তিক)। থিম ও প্লাগইন ইকোসিস্টেমের মাধ্যমে কাস্টমাইজেশন। REST API সমর্থন এবং Gutenberg ব্লক এডিটর। SEO অপ্টিমাইজেশন ও ই-কমার্স (WooCommerce) সুবিধা।",
      "example": "wp-admin প্যানেলে নতুন পোস্ট তৈরি ও পাবলিশিং",
      "category": "Web Development",
      "translation": "ওয়ার্ডপ্রেস"
    },
    {
      "id": 78,
      "word": "Joomla",
      "definition": "এন্টারপ্রাইজ-গ্রেড কন্টেন্ট ম্যানেজমেন্ট ফ্রেমওয়ার্ক (MVC আর্কিটেকচার)। এক্সটেনশন ম্যানেজার ও টেমপ্লেট ওভাররাইড সিস্টেম। ইউজার অ্যাকসেস লেভেল (ACL) কন্ট্রোল এবং মাল্টিলিঙ্গুয়াল সাপোর্ট।",
      "example": "জুমলা কন্ট্রোল প্যানেলে মেনু ম্যানেজমেন্ট",
      "category": "Web Development",
      "translation": "জুমলা"
    },
    {
      "id": 79,
      "word": "Byte",
      "definition": "ডিজিটাল ইনফরমেশনের মৌলিক ইউনিট (8 বিট সমন্বয়ে গঠিত)। ASCII ক্যারেক্টার রিপ্রেজেন্টেশন (1 বাইট = 1 ক্যারেক্টার)। মেমরি অ্যাড্রেসিং ও ফাইল স্টোরেজের ভিত্তি।",
      "example": "চার বাইটে একটি 32-বিট পূর্ণসংখ্যা সংরক্ষণ",
      "category": "Data Measurement",
      "translation": "বাইট"
    },
    {
      "id": 80,
      "word": "Kilobyte",
      "definition": "ডাটা মাপনের একক (1 KB = 1024 বাইট)। স্মল টেক্সট ফাইল বা লো-রেজোলিউশন ইমেজের আকার পরিমাপ। মেমরি কার্ড/র্যাম ক্যাপাসিটি নির্দেশনে ব্যবহৃত।",
      "example": "একটি সাধারণ .txt ফাইল 2KB সাইজ",
      "category": "Data Measurement",
      "translation": "কিলোবাইট"
    },
    {
      "id": 81,
      "word": "Megabyte",
      "definition": "ডাটা স্টোরেজ ইউনিট (1 MB = 1024 KB)। MP3 অডিও ফাইল বা মিডিয়াম-কোয়ালিটি ইমেজের সাইজ। RAM মেমরি অ্যালোকেশনের সাধারণ মাপকাঠি।",
      "example": "একটি 3-মিনিটের MP3 গান ≈ 4MB",
      "category": "Data Measurement",
      "translation": "মেগাবাইট"
    },
    {
      "id": 82,
      "word": "Gigabyte",
      "definition": "বৃহৎ ডাটা পরিমাপ (1 GB = 1024 MB)। HD মুভি/গেম বা সফটওয়্যার ইনস্টলারের সাইজ। SSD/HDD স্টোরেজ ক্যাপাসিটি নির্দেশনে স্ট্যান্ডার্ড ইউনিট।",
      "example": "Windows 11 ইনস্টলেশন ≈ 20GB",
      "category": "Data Measurement",
      "translation": "গিগাবাইট"
    },
    {
      "id": 83,
      "word": "Terabyte",
      "definition": "বৃহৎ স্কেল ডাটা স্টোরেজ (1 TB = 1024 GB)। সার্ভার-গ্রেড স্টোরেজ বা ডাটা সেন্টার ক্যাপাসিটি। 4K ভিডিও আর্কাইভ বা বিগ ডাটা অ্যানালিটিক্সে ব্যবহৃত।",
      "example": "1TB HDD-তে ≈ 250 HD মুভি সংরক্ষণ",
      "category": "Data Measurement",
      "translation": "টেরাবাইট"
    },
    {
      "id": 84,
      "word": "Petabyte",
      "definition": "এক্সাস্কেল ডাটা মাপন (1 PB = 1024 TB)। ক্লাউড স্টোরেজ সিস্টেম বা বৈজ্ঞানিক গবেষণা ডাটাসেট। গুগল/ফেসবুকের ডেইলি ডাটা প্রসেসিং ক্যাপাসিটি।",
      "example": "Google-এর সমস্ত সার্চ ডাটা ≈ 100PB",
      "category": "Data Measurement",
      "translation": "পেটাবাইট"
    },
    {
      "id": 85,
      "word": "WiFi",
      "definition": "ওয়্যারলেস নেটওয়ার্কিং প্রোটোকল (IEEE 802.11 স্ট্যান্ডার্ড)। 2.4GHz/5GHz ফ্রিকোয়েন্সি ব্যান্ডে অপারেশন। WPA3 এনক্রিপশন ও মেশ নেটওয়ার্কিং সমর্থন। রাউটার-ক্লায়েন্ট আর্কিটেকচারে ডেটা ট্রান্সমিশন।",
      "example": "কফি শপে পাবলিক WiFi-তে কানেক্ট করা",
      "category": "Networking",
      "translation": "ওয়াইফাই"
    },
    {
      "id": 86,
      "word": "Cellular",
      "definition": "মোবাইল নেটওয়ার্ক কমিউনিকেশন টেকনোলজি (4G LTE/5G NR)। সেল টাওয়ারের মাধ্যমে জিওগ্রাফিকাল কভারেজ। SIM কার্ড অথেন্টিকেশন ও ভয়েস/ডাটা প্যাকেট সুইচিং।",
      "example": "সেলুলার ডাটা ব্যবহার করে ভিডিও স্ট্রিমিং",
      "category": "Networking",
      "translation": "সেলুলার"
    }
  ]
}
